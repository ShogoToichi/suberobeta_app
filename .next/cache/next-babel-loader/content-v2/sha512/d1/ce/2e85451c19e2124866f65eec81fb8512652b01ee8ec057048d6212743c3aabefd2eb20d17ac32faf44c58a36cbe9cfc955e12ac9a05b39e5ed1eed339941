{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\Message.js\";\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Lib from \"../static/address_lib\";\nimport { connect } from \"react-redux\";\nimport \"firebase/storage\";\n\nfunction Message(props) {\n  const {\n    0: createrid,\n    1: setCreaterid\n  } = useState(\"\");\n  const {\n    0: messages,\n    1: setMessages\n  } = useState(\"\");\n  const {\n    0: buyerid,\n    1: setBuyerid\n  } = useState(\"\");\n  const {\n    0: lessonname,\n    1: setLessonname\n  } = useState(\"\");\n  const style2 = {\n    backgroundColor: \"blue\"\n  };\n  const style1 = {\n    backgroundColor: \"red\"\n  };\n  const messagedata = [];\n  const messageitems = []; //lessondata及びlessoncreaterのprofileを取得\n\n  const getMessageData = async () => {\n    const email = Lib.encode(props.email);\n    const db = firebase.firestore(); //router.query.lessonidでページのurlの末尾を取得\n\n    const router = useRouter();\n    await db.collection(\"lessons\").doc(router.query.lessonid).get() //データ取得後の処理\n    //取得したデータをlessondataにしまってから、それをステートに突っ込む\n    .then(function (doc) {\n      const lessondata = doc.data();\n      setCreaterid(lessondata.createrid);\n      setLessonname(lessondata.lessonname);\n      setBuyerid(lessondata.buyerid);\n      db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").orderBy(\"time\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          messagedata.push(doc.data());\n        });\n\n        for (let i in messagedata) {\n          let text = messagedata[i].text;\n          let userid = messagedata[i].userid;\n\n          if (userid == email) {\n            messageitems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: \"style1\",\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this));\n          } else {\n            messageitems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: \"style2\",\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this));\n          }\n        }\n\n        setMessages(messageitems);\n      });\n    });\n  };\n\n  const userfilter = () => {\n    if (email == createrid || email == buyerid) {\n      return messages;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u3054\\u5229\\u7528\\u3044\\u305F\\u3060\\u3051\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getMessageData,\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: lessonname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), userfilter]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n}\n\nMessage = connect(state => state)(Message);\nexport default Message;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/Message.js"],"names":["React","useState","firebase","useRouter","Lib","connect","Message","props","createrid","setCreaterid","messages","setMessages","buyerid","setBuyerid","lessonname","setLessonname","style2","backgroundColor","style1","messagedata","messageitems","getMessageData","email","encode","db","firestore","router","collection","doc","query","lessonid","get","then","lessondata","data","orderBy","querySnapshot","forEach","push","i","text","userid","userfilter","state"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport {useRouter}from \"next/router\";\r\nimport Lib from \"../static/address_lib\"\r\nimport { connect } from \"react-redux\";\r\nimport \"firebase/storage\";\r\n\r\nfunction Message (props){\r\n  const [createrid,setCreaterid]= useState(\"\");\r\n  const [messages,setMessages] = useState(\"\");\r\n  const [buyerid,setBuyerid]= useState(\"\");\r\n  const [lessonname,setLessonname] = useState(\"\");\r\n  \r\n  const style2 = {\r\n    backgroundColor :\"blue\",\r\n  }\r\n  const style1 = {\r\n    backgroundColor :\"red\",\r\n  }\r\n  const messagedata=[];\r\n  const messageitems=[];\r\n\r\n  //lessondata及びlessoncreaterのprofileを取得\r\n  const getMessageData= async()=>{\r\n    const email = Lib.encode(props.email);\r\n    const db = firebase.firestore ();\r\n    //router.query.lessonidでページのurlの末尾を取得\r\n    const router = useRouter();\r\n    await db.collection(\"lessons\").doc(router.query.lessonid).get()\r\n    //データ取得後の処理\r\n    //取得したデータをlessondataにしまってから、それをステートに突っ込む\r\n    .then(function(doc){\r\n      const lessondata = doc.data();\r\n        setCreaterid(lessondata.createrid);\r\n        setLessonname(lessondata.lessonname);\r\n        setBuyerid(lessondata.buyerid);\r\n\r\n        db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").orderBy(\"time\")\r\n        .get()\r\n          .then(function(querySnapshot){\r\n            querySnapshot.forEach(function(doc){\r\n              messagedata.push(doc.data());\r\n            });\r\n          for(let i in messagedata){\r\n            let text = messagedata[i].text;\r\n            let userid = messagedata[i].userid;\r\n            if(userid == email){\r\n              messageitems.push(\r\n                <div>\r\n                  <p style={\"style1\"}>{text}</p>\r\n                </div>\r\n              );}\r\n            else {\r\n              messageitems.push(\r\n                <div>\r\n                  <p style={\"style2\"}>{text}</p>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n          setMessages(messageitems);\r\n          })\r\n  })}\r\n  const userfilter =()=>{\r\n    if (email==createrid || email==buyerid){\r\n      return messages;\r\n    }\r\n    else{\r\n      return <p>メッセージはご利用いただけません</p>\r\n    }\r\n  }\r\nreturn(\r\n  <div>\r\n    <button onClick={getMessageData}>読み込み</button>\r\n    <h2>{lessonname}</h2>\r\n    {userfilter}\r\n  </div>\r\n)\r\n}\r\n\r\n\r\nMessage = connect((state)=>state)(Message);\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}