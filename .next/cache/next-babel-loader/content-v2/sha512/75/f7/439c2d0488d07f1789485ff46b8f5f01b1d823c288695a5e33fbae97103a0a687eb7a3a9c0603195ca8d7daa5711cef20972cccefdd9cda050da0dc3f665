{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/t.osato/Documents/subero/suberobeta_app-1/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _asyncToGenerator from \"C:/Users/t.osato/Documents/subero/suberobeta_app-1/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Lib from \"../../Lib/address_lib\";\nimport { connect } from \"react-redux\";\nimport \"firebase/storage\";\n\nfunction Message(props) {\n  //ステート定義\n  var _useState = useState(\"\"),\n      createrid = _useState[0],\n      setCreaterid = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      buyerid = _useState3[0],\n      setBuyerid = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      lessonname = _useState4[0],\n      setLessonname = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      creatername = _useState5[0],\n      setCreaterName = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      buyername = _useState6[0],\n      setBuyerName = _useState6[1]; //送信者によってスタイルを変更するテスト用のスタイル\n\n\n  var style = {\n    // border:\"solid 1px #DDD\", \n    backgroundColor: \"#E0E0E0\",\n    borderRadius: \"7px\",\n    height: \"40px\",\n    verticalAlign: \"middle\",\n    padding: \"10px 20px 0px 20px\",\n    fontSize: \"20px\",\n    display: \"inline-block\",\n    marginBottom: \"10px\",\n    marginLeft: \"50px\"\n  };\n  var messagedata = [];\n  var messageitems = [];\n  var router = useRouter();\n  var email = Lib.encodeEmail(props.email);\n  var db = firebase.firestore(); //lessondata及びmessageを取得\n\n  var getMessageData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return db.collection(\"lessons\").doc(router.query.lessonid).get() //取得したデータをlessondataにしまってから、それをステートに突っ込む\n              .then(function (doc) {\n                var lessondata = doc.data();\n                setCreaterid(lessondata.createrid);\n                setLessonname(lessondata.lessonname);\n                setBuyerid(lessondata.buyerid);\n              });\n\n            case 2:\n              _context.next = 4;\n              return db.collection(\"users\").doc(createrid).get().then(function (doc) {\n                var createrdata = doc.data();\n                setCreaterName(createrdata.profile.name);\n              });\n\n            case 4:\n              _context.next = 6;\n              return db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").orderBy(\"time\").get() //取得したデータをmessagedata配列に入れる。\n              //配列の繰り返し処理でメッセージのjsxを作り、\n              //messageitemsに入れて、最後にstateに入れる\n              .then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                  messagedata.push(doc.data());\n                });\n\n                for (var i in messagedata) {\n                  var text = messagedata[i].text;\n                  var userid = messagedata[i].userid; //送信者とReduxメアドの比較でスタイル分岐\n\n                  if (userid == email) {\n                    messageitems.push( /*#__PURE__*/_jsxs(\"div\", {\n                      children: [/*#__PURE__*/_jsx(\"p\", {\n                        style: {\n                          marginBottom: \"3px\"\n                        },\n                        children: creatername\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        style: style,\n                        children: text\n                      }), /*#__PURE__*/_jsx(\"br\", {})]\n                    }));\n                  } else {\n                    messageitems.push( /*#__PURE__*/_jsxs(\"div\", {\n                      children: [/*#__PURE__*/_jsx(\"div\", {\n                        style: style,\n                        children: text\n                      }), /*#__PURE__*/_jsx(\"br\", {})]\n                    }));\n                  }\n                } //作成者、購入者以外メッセージが見れないようにする\n\n\n                if (email == createrid || email == buyerid) {\n                  setMessages(messageitems);\n                } else {\n                  var errorMessage = /*#__PURE__*/_jsx(\"p\", {\n                    children: \"\\u3054\\u5229\\u7528\\u3044\\u305F\\u3060\\u3051\\u307E\\u305B\\u3093\"\n                  });\n\n                  setMessages(errorMessage);\n                }\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getMessageData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"button\", {\n      onClick: getMessageData,\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\"\n    }), /*#__PURE__*/_jsx(\"h2\", {\n      children: lessonname\n    }), messages]\n  });\n}\n\nMessage = connect(function (state) {\n  return state;\n})(Message);\nexport default Message;","map":null,"metadata":{},"sourceType":"module"}