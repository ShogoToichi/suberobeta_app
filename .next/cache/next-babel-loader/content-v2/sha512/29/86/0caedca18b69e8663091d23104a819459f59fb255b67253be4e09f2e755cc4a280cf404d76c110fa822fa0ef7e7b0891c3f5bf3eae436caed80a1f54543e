{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\LessonInfo.js\";\n//※要追加 :  ・purchasedか何かで受付中のレッスンとそうでないレッスン購入ボタンの表示を変更\n//            ・購入後purchasedの書き換え及びmessageへの移動\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport Lib from \"../static/address_lib\";\nimport Link from \"next/link\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\n\nfunction LessonInfo(props) {\n  // 使用するステートの定義\n  const {\n    0: createrid,\n    1: setCreaterid\n  } = useState(\"\");\n  const {\n    0: lessonid,\n    1: setLessonid\n  } = useState(\"\");\n  const {\n    0: purchased,\n    1: setPurchased\n  } = useState(\"\");\n  const {\n    0: lessonname,\n    1: setLessonname\n  } = useState(\"\");\n  const {\n    0: place,\n    1: setPlace\n  } = useState(\"\");\n  const {\n    0: time,\n    1: setTime\n  } = useState(\"\");\n  const {\n    0: price,\n    1: setPrice\n  } = useState(\"\");\n  const {\n    0: lessoncomment,\n    1: setLessoncomment\n  } = useState(\"\");\n  const {\n    0: profileusername,\n    1: setProfileusername\n  } = useState(\"\");\n  const {\n    0: profileintroduction,\n    1: setProfileintroduction\n  } = useState(\"\");\n  const db = firebase.firestore();\n  const router = useRouter(); //lessondata及びlessoncreaterのprofileを取得\n\n  const getLessonData = async () => {\n    //router.query.lessonidでページのurlの末尾を取得\n    await db.collection(\"lessons\").doc(router.query.lessonid).get() //データ取得後の処理\n    //取得したデータをlessondataにしまってから、それをステートに突っ込む\n    //lessonidは取得しなくていいかも\n    .then(function (doc) {\n      const lessondata = doc.data();\n      const lesson_id = doc.id;\n      setCreaterid(lessondata.createrid);\n      setLessonid(lesson_id);\n      setPurchased(lessondata.purchased);\n      setLessonname(lessondata.lessonname);\n      setPlace(lessondata.lessonplace);\n      setTime(lessondata.lessontime);\n      setPrice(lessondata.lessonprice);\n      setLessoncomment(lessondata.lessontext);\n      console.log(createrid); //ここからプロフィール取得処理\n      //レッスン情報で取得したcreateridでfirebaseを参照\n\n      db.collection(\"users\").doc(createrid).get() //if文の処理はエラーがあった時のための処理\n      //ネット記事のコピペなので、必要性がどれほどあるかは謎\n      .then(function (doc) {\n        if (doc.exists) {\n          const userdata = doc.data();\n          console.log(createrid, userdata);\n          setProfileusername(userdata.profile.name);\n          setProfileintroduction(userdata.profile.introduction);\n        } else {\n          console.log(\"no data\");\n        }\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n    });\n  };\n\n  const dobuy = async () => {\n    const email = Lib.encodeEmail(props.email);\n    await db.collection(\"lessons\").doc(router.query.lessonid).set({\n      buyerid: email\n    }, {\n      merge: true\n    });\n  };\n\n  if (lessonname == \"\") {\n    getLessonData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30EC\\u30C3\\u30B9\\u30F3\\u60C5\\u5831\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      as: `/message/${router.query.lessonid}`,\n      href: \"/messge/[lessonid]\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: dobuy,\n        children: \"\\u8CFC\\u5165\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: lessonname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6599\\u91D1 : \", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u5834\\u6240 : \", place]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6642\\u9593 : \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u8A73\\u7D30 : \", lessoncomment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lessonprofile\",\n      children: /*#__PURE__*/_jsxDEV(Profile, {\n        username: profileusername,\n        introduction: profileintroduction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n\nLessonInfo = connect(state => state)(LessonInfo);\nexport default LessonInfo;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/LessonInfo.js"],"names":["React","useState","firebase","useRouter","Profile","connect","Lib","Link","Typography","makeStyles","Avatar","Paper","LessonInfo","props","createrid","setCreaterid","lessonid","setLessonid","purchased","setPurchased","lessonname","setLessonname","place","setPlace","time","setTime","price","setPrice","lessoncomment","setLessoncomment","profileusername","setProfileusername","profileintroduction","setProfileintroduction","db","firestore","router","getLessonData","collection","doc","query","get","then","lessondata","data","lesson_id","id","lessonplace","lessontime","lessonprice","lessontext","console","log","exists","userdata","profile","name","introduction","catch","error","dobuy","email","encodeEmail","set","buyerid","merge","state"],"mappings":"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","sourcesContent":["//※要追加 :  ・purchasedか何かで受付中のレッスンとそうでないレッスン購入ボタンの表示を変更\r\n//            ・購入後purchasedの書き換え及びmessageへの移動\r\n\r\nimport React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport {useRouter}from \"next/router\";\r\nimport Profile from \"./Profile\";\r\nimport {connect}from \"react-redux\";\r\nimport Lib from \"../static/address_lib\";\r\nimport Link from \"next/link\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n\r\n\r\nfunction LessonInfo (props){\r\n  \r\n  // 使用するステートの定義\r\n  const [createrid,setCreaterid]= useState(\"\");\r\n  const [lessonid,setLessonid]= useState(\"\");\r\n  const [purchased,setPurchased]= useState(\"\");\r\n  const [lessonname,setLessonname] = useState(\"\");\r\n  const [place,setPlace] = useState(\"\");\r\n  const [time,setTime] = useState(\"\");\r\n  const [price,setPrice] = useState(\"\");\r\n  const [lessoncomment,setLessoncomment] = useState(\"\");\r\n  const [profileusername,setProfileusername] = useState(\"\");\r\n  const [profileintroduction,setProfileintroduction]=useState(\"\");\r\n\r\n  const db = firebase.firestore ();\r\n  const router = useRouter();\r\n\r\n  //lessondata及びlessoncreaterのprofileを取得\r\n  const getLessonData= async()=>{\r\n    //router.query.lessonidでページのurlの末尾を取得\r\n    await db.collection(\"lessons\").doc(router.query.lessonid).get()\r\n    //データ取得後の処理\r\n    //取得したデータをlessondataにしまってから、それをステートに突っ込む\r\n    //lessonidは取得しなくていいかも\r\n    .then(function(doc){\r\n      const lessondata = doc.data();\r\n      const lesson_id = doc.id;\r\n        setCreaterid(lessondata.createrid);\r\n        setLessonid(lesson_id);\r\n        setPurchased(lessondata.purchased);\r\n        setLessonname(lessondata.lessonname);\r\n        setPlace(lessondata.lessonplace);\r\n        setTime(lessondata.lessontime);\r\n        setPrice(lessondata.lessonprice);\r\n        setLessoncomment(lessondata.lessontext);\r\n        console.log(createrid);\r\n        //ここからプロフィール取得処理\r\n        //レッスン情報で取得したcreateridでfirebaseを参照\r\n        db.collection(\"users\").doc(createrid).get()\r\n        //if文の処理はエラーがあった時のための処理\r\n        //ネット記事のコピペなので、必要性がどれほどあるかは謎\r\n        .then(function(doc){\r\n          if (doc.exists){\r\n            const userdata = doc.data();\r\n            console.log(createrid,userdata);\r\n            setProfileusername(userdata.profile.name);\r\n            setProfileintroduction(userdata.profile.introduction)\r\n          }else{\r\n            console.log(\"no data\");\r\n          }\r\n        }).catch(function(error){\r\n          console.log(\"Error getting document:\",error);\r\n        });\r\n    });\r\n  }\r\n\r\n    const dobuy = async()=>{\r\n      const email = Lib.encodeEmail(props.email);\r\n      await db.collection(\"lessons\").doc(router.query.lessonid).set({\r\n      buyerid:email\r\n    },{merge: true})\r\n    }\r\n\r\n    if(lessonname ==\"\"){\r\n      getLessonData();\r\n    }\r\n\r\n\r\n    return(\r\n      <div>\r\n        <h1>レッスン情報</h1>\r\n        <Link as={`/message/${router.query.lessonid}`}\r\n              href=\"/messge/[lessonid]\">\r\n          <button onClick={dobuy}>購入</button>\r\n        </Link>\r\n        <h2>{lessonname}</h2>\r\n        <p>料金 : {price}</p>\r\n        <p>場所 : {place}</p>\r\n        <p>時間 : {time}</p>\r\n        <p>詳細 : {lessoncomment}</p>\r\n        <div className=\"lessonprofile\">\r\n        <Profile  username={profileusername} introduction={profileintroduction}/>\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n    }\r\n\r\n\r\nLessonInfo= connect((state)=>state)(LessonInfo);\r\nexport default LessonInfo;\r\n\r\n"]},"metadata":{},"sourceType":"module"}