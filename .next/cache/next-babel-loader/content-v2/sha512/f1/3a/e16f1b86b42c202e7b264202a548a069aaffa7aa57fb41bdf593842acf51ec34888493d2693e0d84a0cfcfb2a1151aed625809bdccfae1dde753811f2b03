{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\MessageAdd.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Lib from \"../static/address_lib\";\n\nfunction MessageAdd(props) {\n  _s2();\n\n  //使用するステートの設定(Hook)\n  var _useState = useState(\"\"),\n      message = _useState[0],\n      setMessage = _useState[1]; //inputに入力された処理をeで受け取ってステートに入れる関数\n\n\n  var doChangeMessage = function doChangeMessage(e) {\n    setMessage(e.target.value);\n  }; //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\n\n\n  var doSubmit = /*#__PURE__*/function () {\n    var _s = $RefreshSig$();\n\n    var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, email, router;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _s();\n\n              db = firebase.firestore();\n              email = Lib.encodeEmail(props.email);\n              router = useRouter();\n              _context.next = 6;\n              return db.collection(\"lessons\").doc(router.query.lessonid).collection(message).add({\n                userid: email,\n                text: message,\n                time: db.FieldValue.serverTimestamp()\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n      return [useRouter];\n    }));\n\n    return function doSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: doChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doSubmit,\n      children: \"\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(MessageAdd, \"1qb3g7n3TPscMHKOMXs30tr1mMM=\");\n\n_c = MessageAdd;\nMessageAdd = connect(function (state) {\n  return state;\n})(MessageAdd);\nexport default MessageAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageAdd\");","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/MessageAdd.js"],"names":["React","useState","connect","firebase","useRouter","Lib","MessageAdd","props","message","setMessage","doChangeMessage","e","target","value","doSubmit","db","firestore","email","encodeEmail","router","collection","doc","query","lessonid","add","userid","text","time","FieldValue","serverTimestamp","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,SAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AAGxB;AAHwB,kBAIKN,QAAQ,CAAC,EAAD,CAJb;AAAA,MAIjBO,OAJiB;AAAA,MAITC,UAJS,iBAMxB;;;AACA,MAAMC,eAAe,GAAE,SAAjBA,eAAiB,CAACC,CAAD,EAAK;AAC1BF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD,CAPwB,CAWxB;AACA;AACA;;;AACA,MAAMC,QAAQ;AAAA;;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACTC,cAAAA,EADS,GACJZ,QAAQ,CAACa,SAAT,EADI;AAETC,cAAAA,KAFS,GAEDZ,GAAG,CAACa,WAAJ,CAAgBX,KAAK,CAACU,KAAtB,CAFC;AAGTE,cAAAA,MAHS,GAGAf,SAAS,EAHT;AAAA;AAAA,qBAITW,EAAE,CAACK,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BF,MAAM,CAACG,KAAP,CAAaC,QAA1C,EAAoDH,UAApD,CAA+DZ,OAA/D,EAAwEgB,GAAxE,CAA4E;AAC9EC,gBAAAA,MAAM,EAAER,KADsE;AAE9ES,gBAAAA,IAAI,EAAElB,OAFwE;AAG9EmB,gBAAAA,IAAI,EAAEZ,EAAE,CAACa,UAAH,CAAcC,eAAd;AAHwE,eAA5E,CAJS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;AAAA,cAGGzB,SAHH;AAAA;;AAAA,oBAARU,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAWF,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEI,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKG;;IA9BMR,U;;KAAAA,U;AAgCTA,UAAU,GAAEJ,OAAO,CAAC,UAAC4B,KAAD;AAAA,SAASA,KAAT;AAAA,CAAD,CAAP,CAAwBxB,UAAxB,CAAZ;AACA,eAAeA,UAAf","sourcesContent":["import React , {useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport {useRouter}from \"next/router\";\r\nimport Lib from \"../static/address_lib\";\r\n\r\nfunction MessageAdd(props){\r\n\r\n\r\n  //使用するステートの設定(Hook)\r\n  const [message,setMessage] = useState(\"\");\r\n\r\n  //inputに入力された処理をeで受け取ってステートに入れる関数\r\n  const doChangeMessage =(e)=>{\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\r\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\r\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\r\n  const doSubmit = async()=>{\r\n    const db = firebase.firestore ();\r\n    const email = Lib.encodeEmail(props.email);\r\n    const router = useRouter();\r\n    await db.collection(\"lessons\").doc(router.query.lessonid).collection(message).add({\r\n        userid: email,\r\n        text: message,\r\n        time: db.FieldValue.serverTimestamp(),\r\n      })\r\n  }\r\n\r\nreturn(\r\n  <div>\r\n    <input type=\"text\" onChange={doChangeMessage}></input>\r\n    <button onClick={doSubmit}>追加</button>\r\n  </div>\r\n);}\r\n\r\nMessageAdd =connect((state)=>state)(MessageAdd);\r\nexport default MessageAdd;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}