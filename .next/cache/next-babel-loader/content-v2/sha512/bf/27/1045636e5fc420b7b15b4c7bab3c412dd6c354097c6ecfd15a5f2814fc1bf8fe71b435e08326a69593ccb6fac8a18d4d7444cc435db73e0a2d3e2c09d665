{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n//ProfileAddでimport\n//inputに入れられたファイルをfirebase storageに突っ込む\n//取得した画像のurlを取得してcloudfirestoreに入れて引っぱり出せるようにする\nimport firebase, { storage } from \"../../redux/store\";\nimport \"firebase/storage\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Lib from \"../../Lib/address_lib\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from '@material-ui/core/IconButton';\nconst plofiledit = makeStyles({\n  title: {\n    margin: '10px',\n    fontWeight: 'bold'\n  },\n  name: {\n    marginTop: '20px'\n  },\n  upload: {\n    marginTop: '40px'\n  },\n  plofile: {\n    marginTop: '40px'\n  },\n  buttongroup: {\n    marginTop: '40px',\n    textAlign: 'center'\n  },\n  button: {\n    width: '200px',\n    backgroundColor: '#DDD',\n    color: 'black',\n    margin: \"0px 20px\"\n  }\n});\n\nfunction GetImage(props) {\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  const {\n    0: imageUrl,\n    1: setImageUrl\n  } = useState(\"\");\n\n  const handleImage = event => {\n    const image = event.target.files[0];\n    setImage(image);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (image === \"\") {\n      console.log(\"ファイルが選択されていません\");\n    } // アップロード処理\n\n\n    const uploadTask = storage.ref(`/profileimages/${image.name}`).put(image);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, next, error, complete);\n  };\n\n  const next = snapshot => {\n    // 進行中のsnapshotを得る\n    // アップロードの進行度を表示\n    const percent = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n    console.log(percent + \"% done\");\n    console.log(snapshot);\n  };\n\n  const error = error => {\n    // エラーハンドリング\n    console.log(error);\n  };\n\n  const complete = () => {\n    // 完了後の処理\n    // 画像表示のため、アップロードした画像のURLを取得\n    storage.ref(\"profileimages\").child(image.name).getDownloadURL().then(fireBaseUrl => {\n      setImageUrl(fireBaseUrl); // 取得した画像の名前をfirebaseに保存\n\n      const db = firebase.firestore();\n      const email = Lib.encodeEmail(props.email);\n      db.collection(\"users\").doc(email).set({\n        \"imageurl\": fireBaseUrl\n      }, {\n        merge: true\n      }).then(function () {\n        console.log(fireBaseUrl);\n        console.log(imageUrl);\n      });\n    });\n  };\n\n  const classes = plofiledit();\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        type: \"file\",\n        onChange: handleImage\n      }), /*#__PURE__*/_jsx(\"button\", {\n        children: \"\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n      })]\n    }), /*#__PURE__*/_jsx(\"img\", {\n      src: imageUrl,\n      alt: \"upload\",\n      style: {\n        height: \"70px\",\n        width: \"70px\",\n        borderRadius: \"35px\",\n        margin: \"20px 0px 0px 20px\"\n      }\n    })]\n  });\n}\n\nGetImage = connect(state => state)(GetImage);\nexport default GetImage;","map":null,"metadata":{},"sourceType":"module"}