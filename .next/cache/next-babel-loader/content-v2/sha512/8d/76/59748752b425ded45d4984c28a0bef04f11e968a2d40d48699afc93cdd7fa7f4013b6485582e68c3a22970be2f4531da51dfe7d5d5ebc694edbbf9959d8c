{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\LessonList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\"; // import \"firebase/storage\";\n\nimport Lesson from \"./Lesson\";\n\nfunction LessonList() {\n  _s();\n\n  //ステートの設定\n  var _useState = useState(\"no item\"),\n      items = _useState[0],\n      setItems = _useState[1]; //lessondataはfirebaseのレッスンdataをいったん保管する\n  //lessonidはfirebaseのレッスンidをいったん保管する\n  //lessonitemsは値を渡された<Lesson/>が要素の配列ををいったん保管する\n\n\n  var getFireData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, lessondata, lessonid, lessonitems;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              db = firebase.firestore();\n              lessondata = [];\n              lessonid = [];\n              lessonitems = [];\n              _context.next = 6;\n              return db.collection(\"lessons\").get().then(function (querySnapshot) {\n                // 受け取ったオブジェクトの配列に対して、forEachで繰り返し処理\n                //データをアンシフトで配列に入れることで、新しい投稿が配列の頭にくる\n                querySnapshot.forEach(function (doc) {\n                  lessondata.unshift(doc.data());\n                  lessonid.unshift(doc.id);\n                }); //firebaseのデータを入れた配列に対して繰り返し処理で\n                //レッスンコンポーネントに値を渡し、それをlessonitemsにpushする\n                //変数をかませてあるが、不要な気がする\n\n                for (var i in lessondata) {\n                  var id = lessonid[i];\n                  var name = lessondata[i].lessonname;\n                  var place = lessondata[i].lessonplace;\n                  var time = lessondata[i].lessontime;\n                  var text = lessondata[i].lessontext;\n                  var price = lessondata[i].lessonprice;\n                  lessonitems.push( /*#__PURE__*/_jsxDEV(Lesson, {\n                    lessonid: id,\n                    name: name,\n                    place: place,\n                    time: time,\n                    text: text,\n                    price: price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 11\n                  }, this));\n                } //最後にlessonitemsをステートにいれる\n\n\n                setItems(lessonitems);\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFireData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (items == \"no item\") {\n    getFireData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30EC\\u30C3\\u30B9\\u30F3\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), items]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LessonList, \"EPa/xZ/h77DmlluBT9LjkTFWT9Q=\");\n\n_c = LessonList;\nexport default LessonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LessonList\");","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/LessonList.js"],"names":["React","useState","firebase","Lesson","LessonList","items","setItems","getFireData","db","firestore","lessondata","lessonid","lessonitems","collection","get","then","querySnapshot","forEach","doc","unshift","data","id","i","name","lessonname","place","lessonplace","time","lessontime","text","lessontext","price","lessonprice","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AADoB,kBAEKH,QAAQ,CAAC,SAAD,CAFb;AAAA,MAEbI,KAFa;AAAA,MAEPC,QAFO,iBAIpB;AACA;AACA;;;AACA,MAAMC,WAAW;AAAA,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,EADW,GACNN,QAAQ,CAACO,SAAT,EADM;AAEXC,cAAAA,UAFW,GAEE,EAFF;AAGXC,cAAAA,QAHW,GAGA,EAHA;AAIXC,cAAAA,WAJW,GAIG,EAJH;AAAA;AAAA,qBAKXJ,EAAE,CAACK,UAAH,CAAc,SAAd,EAAyBC,GAAzB,GAA+BC,IAA/B,CAAoC,UAASC,aAAT,EAAuB;AAC/D;AACA;AACAA,gBAAAA,aAAa,CAACC,OAAd,CAAsB,UAASC,GAAT,EAAa;AACjCR,kBAAAA,UAAU,CAACS,OAAX,CAAmBD,GAAG,CAACE,IAAJ,EAAnB;AACAT,kBAAAA,QAAQ,CAACQ,OAAT,CAAiBD,GAAG,CAACG,EAArB;AACD,iBAHD,EAH+D,CAO/D;AACA;AACA;;AACA,qBAAK,IAAIC,CAAT,IAAcZ,UAAd,EAAyB;AACvB,sBAAIW,EAAE,GAAGV,QAAQ,CAACW,CAAD,CAAjB;AACA,sBAAIC,IAAI,GAAEb,UAAU,CAACY,CAAD,CAAV,CAAcE,UAAxB;AACA,sBAAIC,KAAK,GAAGf,UAAU,CAACY,CAAD,CAAV,CAAcI,WAA1B;AACA,sBAAIC,IAAI,GAAGjB,UAAU,CAACY,CAAD,CAAV,CAAcM,UAAzB;AACA,sBAAIC,IAAI,GAAGnB,UAAU,CAACY,CAAD,CAAV,CAAcQ,UAAzB;AACA,sBAAIC,KAAK,GAAGrB,UAAU,CAACY,CAAD,CAAV,CAAcU,WAA1B;AACApB,kBAAAA,WAAW,CAACqB,IAAZ,eACE,QAAC,MAAD;AAAQ,oBAAA,QAAQ,EAAEZ,EAAlB;AACQ,oBAAA,IAAI,EAAEE,IADd;AAEQ,oBAAA,KAAK,EAAEE,KAFf;AAGQ,oBAAA,IAAI,EAAEE,IAHd;AAIQ,oBAAA,IAAI,EAAEE,IAJd;AAKQ,oBAAA,KAAK,EAAEE;AALf;AAAA;AAAA;AAAA;AAAA,0BADF;AASD,iBA1B8D,CA2B/D;;;AACAzB,gBAAAA,QAAQ,CAACM,WAAD,CAAR;AACD,eA7BK,CALW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA,oBAAXL,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAqCA,MAAGF,KAAK,IAAG,SAAX,EAAqB;AACnBE,IAAAA,WAAW;AACZ;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtDQD,U;;KAAAA,U;AAwDT,eAAeA,UAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\n// import \"firebase/storage\";\r\nimport Lesson from \"./Lesson\";\r\n\r\n\r\nfunction LessonList (){\r\n  //ステートの設定\r\n  const [items,setItems] = useState(\"no item\");\r\n\r\n  //lessondataはfirebaseのレッスンdataをいったん保管する\r\n  //lessonidはfirebaseのレッスンidをいったん保管する\r\n  //lessonitemsは値を渡された<Lesson/>が要素の配列ををいったん保管する\r\n  const getFireData= async()=>{\r\n    const db = firebase.firestore ();\r\n    const lessondata = [];\r\n    const lessonid = [];\r\n    const lessonitems = [];\r\n    await db.collection(\"lessons\").get().then(function(querySnapshot){\r\n      // 受け取ったオブジェクトの配列に対して、forEachで繰り返し処理\r\n      //データをアンシフトで配列に入れることで、新しい投稿が配列の頭にくる\r\n      querySnapshot.forEach(function(doc){\r\n        lessondata.unshift(doc.data());\r\n        lessonid.unshift(doc.id);\r\n      });\r\n      //firebaseのデータを入れた配列に対して繰り返し処理で\r\n      //レッスンコンポーネントに値を渡し、それをlessonitemsにpushする\r\n      //変数をかませてあるが、不要な気がする\r\n      for (let i in lessondata){\r\n        let id = lessonid[i];\r\n        let name =lessondata[i].lessonname;\r\n        let place = lessondata[i].lessonplace;\r\n        let time = lessondata[i].lessontime;\r\n        let text = lessondata[i].lessontext;\r\n        let price = lessondata[i].lessonprice;\r\n        lessonitems.push(\r\n          <Lesson lessonid={id}\r\n                  name={name}\r\n                  place={place}\r\n                  time={time}\r\n                  text={text}\r\n                  price={price}\r\n          />\r\n        );\r\n      }\r\n      //最後にlessonitemsをステートにいれる\r\n      setItems(lessonitems);\r\n    });\r\n  }\r\n\r\n  if(items ==\"no item\"){\r\n    getFireData();\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>レッスン一覧</h2>\r\n      {items}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LessonList;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}