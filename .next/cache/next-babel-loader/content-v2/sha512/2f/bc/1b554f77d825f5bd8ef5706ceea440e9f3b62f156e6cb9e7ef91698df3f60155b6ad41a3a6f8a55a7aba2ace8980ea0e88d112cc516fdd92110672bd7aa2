{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\MessageAdd.js\";\n//メッセージ送信フォーム\n//message/[lessonid]でインポート\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Lib from \"../static/address_lib\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n    width: '500px'\n  },\n  btn: {\n    margin: \"auto 0 \"\n  }\n}));\n\nfunction MessageAdd(props) {\n  //使用するステートの設定(Hook)\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const {\n    0: userfilter,\n    1: setUserfilter\n  } = useState(\"\"); //inputに入力された処理をeで受け取ってステートに入れる関数\n\n  const doChangeMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  const router = useRouter(); //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\n\n  const doSubmit = async () => {\n    const db = firebase.firestore();\n    const email = Lib.encodeEmail(props.email);\n    let d = new Date().getTime();\n    await db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").add({\n      userid: email,\n      text: message,\n      time: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      setMessage(\"\");\n    }); //userfilterのTorFを、マテリアルUIの表示に関する属性に用いて、\n    //作成者、購入者以外にフォームを表示しなくする予定\n\n    if (email == createrid || email == buyerid) {\n      setUserfilter(true);\n    } else {\n      setUserfilter(false);\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        variant: \"outlined\",\n        onChange: doChangeMessage,\n        value: message,\n        multiline: true,\n        rows: 3,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: classee,\n      onClick: doSubmit,\n      children: \"\\u9001\\u4FE1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\nMessageAdd = connect(state => state)(MessageAdd);\nexport default MessageAdd;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/MessageAdd.js"],"names":["React","useState","connect","firebase","useRouter","Lib","TextField","makeStyles","Button","useStyles","theme","root","margin","spacing","width","btn","MessageAdd","props","message","setMessage","userfilter","setUserfilter","doChangeMessage","e","target","value","router","doSubmit","db","firestore","email","encodeEmail","d","Date","getTime","collection","doc","query","lessonid","add","userid","text","time","FieldValue","serverTimestamp","then","createrid","buyerid","classes","classee","state"],"mappings":"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","sourcesContent":["//メッセージ送信フォーム\r\n//message/[lessonid]でインポート\r\n\r\nimport React , {useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport {useRouter}from \"next/router\";\r\nimport Lib from \"../static/address_lib\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      margin: theme.spacing(1),\r\n      width: '500px',\r\n  },\r\n  btn:{\r\n    margin:\"auto 0 \",\r\n  }\r\n}));\r\n\r\nfunction MessageAdd(props){\r\n\r\n\r\n  //使用するステートの設定(Hook)\r\n  const [message,setMessage] = useState(\"\");\r\n  const [userfilter,setUserfilter] = useState(\"\");\r\n\r\n  //inputに入力された処理をeで受け取ってステートに入れる関数\r\n  const doChangeMessage =(e)=>{\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  const router = useRouter();\r\n\r\n  //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\r\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\r\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\r\n  const doSubmit = async()=>{\r\n    const db = firebase.firestore ();\r\n    const email = Lib.encodeEmail(props.email);\r\n    let d = new Date().getTime();\r\n    await db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").add({\r\n      userid: email,\r\n      text: message,\r\n      time: firebase.firestore.FieldValue.serverTimestamp(),\r\n      }).then(function(){\r\n        setMessage(\"\");\r\n      })\r\n      //userfilterのTorFを、マテリアルUIの表示に関する属性に用いて、\r\n      //作成者、購入者以外にフォームを表示しなくする予定\r\n      if (email==createrid || email==buyerid){\r\n        setUserfilter(true);\r\n    }\r\n    else{\r\n       setUserfilter(false);   \r\n    }\r\n  }\r\n\r\nconst classes = useStyles();\r\n\r\nreturn(\r\n  <div>\r\n<form className={classes.root} noValidate autoComplete=\"off\">\r\n  <TextField id=\"outlined-basic\"  variant=\"outlined\" onChange={doChangeMessage} value={message} multiline={true} rows={3} fullWidth={true}/>\r\n</form>\r\n<Button style={classee} onClick={doSubmit}>送信</Button>\r\n  </div>\r\n);}\r\n\r\nMessageAdd =connect((state)=>state)(MessageAdd);\r\nexport default MessageAdd;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}