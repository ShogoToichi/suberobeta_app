{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\Message.js\";\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Lib from \"../static/address_lib\";\nimport { connect } from \"react-redux\";\nimport \"firebase/storage\";\n\nfunction Message(props) {\n  //ステート定義\n  const {\n    0: createrid,\n    1: setCreaterid\n  } = useState(\"\");\n  const {\n    0: messages,\n    1: setMessages\n  } = useState(\"\");\n  const {\n    0: buyerid,\n    1: setBuyerid\n  } = useState(\"\");\n  const {\n    0: lessonname,\n    1: setLessonname\n  } = useState(\"\");\n  const {\n    0: creatername,\n    1: setCreaterName\n  } = useState(\"\");\n  const {\n    0: buyername,\n    1: setBuyerName\n  } = useState(\"\"); //送信者によってスタイルを変更するテスト用のスタイル\n\n  const style = {\n    // border:\"solid 1px #DDD\", \n    backgroundColor: \"#E0E0E0\",\n    borderRadius: \"7px\",\n    height: \"40px\",\n    verticalAlign: \"middle\",\n    padding: \"10px 20px 0px 20px\",\n    fontSize: \"20px\",\n    display: \"inline-block\",\n    marginBottom: \"10px\"\n  };\n  const messagedata = [];\n  const messageitems = [];\n  const router = useRouter();\n  const email = Lib.encodeEmail(props.email);\n  const db = firebase.firestore(); //lessondata及びmessageを取得\n\n  const getMessageData = async () => {\n    //router.query.lessonidでページのurlの末尾を取得\n    //先にレッスン名と作成者、購入者のidを取得\n    await db.collection(\"lessons\").doc(router.query.lessonid).get() //取得したデータをlessondataにしまってから、それをステートに突っ込む\n    .then(function (doc) {\n      const lessondata = doc.data();\n      setCreaterid(lessondata.createrid);\n      setLessonname(lessondata.lessonname);\n      setBuyerid(lessondata.buyerid);\n    });\n    await db.collection(\"users\").doc(createrid).get().then(function (doc) {\n      const createrdata = doc.data();\n      setCreaterName(createrdata.profile.name);\n    }); //メッセージ情報取得処理\n    //orderBy(time)で時間の古い順に並べる\n\n    await db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").orderBy(\"time\").get() //取得したデータをmessagedata配列に入れる。\n    //配列の繰り返し処理でメッセージのjsxを作り、\n    //messageitemsに入れて、最後にstateに入れる\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        messagedata.push(doc.data());\n      });\n\n      for (let i in messagedata) {\n        let text = messagedata[i].text;\n        let userid = messagedata[i].userid; //送信者とReduxメアドの比較でスタイル分岐\n\n        if (userid == email) {\n          messageitems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBo\n              },\n              children: creatername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: style,\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this));\n        } else {\n          messageitems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: style,\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this));\n        }\n      } //作成者、購入者以外メッセージが見れないようにする\n\n\n      if (email == createrid || email == buyerid) {\n        setMessages(messageitems);\n      } else {\n        const errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u3054\\u5229\\u7528\\u3044\\u305F\\u3060\\u3051\\u307E\\u305B\\u3093\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 36\n        }, this);\n\n        setMessages(errorMessage);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getMessageData,\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: lessonname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), messages]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n}\n\nMessage = connect(state => state)(Message);\nexport default Message;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/Message.js"],"names":["React","useState","firebase","useRouter","Lib","connect","Message","props","createrid","setCreaterid","messages","setMessages","buyerid","setBuyerid","lessonname","setLessonname","creatername","setCreaterName","buyername","setBuyerName","style","backgroundColor","borderRadius","height","verticalAlign","padding","fontSize","display","marginBottom","messagedata","messageitems","router","email","encodeEmail","db","firestore","getMessageData","collection","doc","query","lessonid","get","then","lessondata","data","createrdata","profile","name","orderBy","querySnapshot","forEach","push","i","text","userid","marginBo","errorMessage","state"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport {useRouter}from \"next/router\";\r\nimport Lib from \"../static/address_lib\"\r\nimport { connect } from \"react-redux\";\r\nimport \"firebase/storage\";\r\n\r\nfunction Message (props){\r\n  //ステート定義\r\n  const [createrid,setCreaterid]= useState(\"\");\r\n  const [messages,setMessages] = useState(\"\");\r\n  const [buyerid,setBuyerid]= useState(\"\");\r\n  const [lessonname,setLessonname] = useState(\"\");\r\n  const [creatername,setCreaterName] = useState(\"\");\r\n  const [buyername, setBuyerName] = useState(\"\");\r\n  \r\n  //送信者によってスタイルを変更するテスト用のスタイル\r\n  const style = {\r\n    // border:\"solid 1px #DDD\", \r\n    backgroundColor :\"#E0E0E0\",\r\n    borderRadius: \"7px\",\r\n    height:\"40px\",\r\n    verticalAlign:\"middle\",\r\n    padding:\"10px 20px 0px 20px\",\r\n    fontSize:\"20px\",\r\n    display:\"inline-block\",\r\n    marginBottom:\"10px\",\r\n  }\r\n  const messagedata=[];\r\n  const messageitems=[];\r\n  \r\n  const router = useRouter();\r\n  const email = Lib.encodeEmail(props.email);\r\n  const db = firebase.firestore ();\r\n\r\n  //lessondata及びmessageを取得\r\n  const getMessageData= async()=>{\r\n    //router.query.lessonidでページのurlの末尾を取得\r\n    //先にレッスン名と作成者、購入者のidを取得\r\n    await db.collection(\"lessons\").doc(router.query.lessonid).get()\r\n    //取得したデータをlessondataにしまってから、それをステートに突っ込む\r\n    .then(function(doc){\r\n      const lessondata = doc.data();\r\n        setCreaterid(lessondata.createrid);\r\n        setLessonname(lessondata.lessonname);\r\n        setBuyerid(lessondata.buyerid);\r\n      })\r\n    await db.collection(\"users\").doc(createrid).get()\r\n      .then(function(doc){\r\n        const createrdata = doc.data();\r\n        setCreaterName(createrdata.profile.name);\r\n      })\r\n        //メッセージ情報取得処理\r\n        //orderBy(time)で時間の古い順に並べる\r\n    await db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").orderBy(\"time\")\r\n        .get()\r\n        //取得したデータをmessagedata配列に入れる。\r\n        //配列の繰り返し処理でメッセージのjsxを作り、\r\n        //messageitemsに入れて、最後にstateに入れる\r\n          .then(function(querySnapshot){\r\n              querySnapshot.forEach(function(doc){\r\n                messagedata.push(doc.data());\r\n              });\r\n            for(let i in messagedata){\r\n              let text = messagedata[i].text;\r\n              let userid = messagedata[i].userid;\r\n              //送信者とReduxメアドの比較でスタイル分岐\r\n              if(userid == email){\r\n                messageitems.push(\r\n                  <div>\r\n                    <p style={{marginBo}}>{creatername}</p>\r\n                    <div style={style}>{text}</div>\r\n                    <br/>\r\n                  </div>\r\n                );}\r\n              else {\r\n                messageitems.push(\r\n                  <div>\r\n\r\n                    <div style={style}>{text}</div>\r\n                    <br/>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n            //作成者、購入者以外メッセージが見れないようにする\r\n            if (email==createrid || email==buyerid){\r\n                setMessages(messageitems);\r\n              }\r\n              else{\r\n                const errorMessage=<p>ご利用いただけません</p>\r\n                setMessages(errorMessage);\r\n              }\r\n          })\r\n  }\r\n  \r\nreturn(\r\n  <div>\r\n    <button onClick={getMessageData}>読み込み</button>\r\n    <h2>{lessonname}</h2>\r\n    {messages}\r\n  </div>\r\n)\r\n}\r\n\r\n\r\nMessage = connect((state)=>state)(Message);\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}