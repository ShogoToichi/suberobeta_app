{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\t.osato\\\\Documents\\\\subero\\\\suberobeta_app-1\\\\components\\\\mypage\\\\MyBuyLessonList.js\";\n//基本的には<LessonList/>と同じなのでそちらを参照\n//.whereでレッスン購入者とReduxのemailが一致するデータを参照\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\nimport MyLesson from \"../\";\nimport { connect } from \"react-redux\";\nimport Lib from \"../../Lib/address_lib\";\nimport Link from \"next/link\";\nimport { makeStyles } from '@material-ui/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nconst mylessonlist = makeStyles({\n  list: {\n    margin: '20px'\n  },\n  addbtn: {\n    textAlign: 'center'\n  },\n  btn: {\n    backgroundColor: \"#4A8\",\n    color: \"white\"\n  }\n});\n\nfunction MyBuyLessonList(props) {\n  const {\n    0: items,\n    1: setItems\n  } = useState(\"no item\");\n\n  const getFireData = async () => {\n    const db = firebase.firestore();\n    const lessondata = [];\n    const lessonid = [];\n    const lessonitems = [];\n    const email = Lib.encodeEmail(props.email);\n    await db.collection(\"lessons\").where(\"buyerid\", \"==\", email).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        lessondata.unshift(doc.data());\n        lessonid.unshift(doc.id);\n      });\n\n      for (let i in lessonid) {\n        let id = lessonid[i];\n        let name = lessondata[i].lessonname;\n        let place = lessondata[i].lessonplace;\n        let time = lessondata[i].lessontime;\n        let text = lessondata[i].lessontext;\n        let price = lessondata[i].lessonprice;\n        lessonitems.push( /*#__PURE__*/_jsxDEV(MyLesson, {\n          lessonid: id,\n          name: name,\n          place: place,\n          time: time,\n          text: text,\n          price: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this));\n      }\n\n      setItems(lessonitems);\n    });\n  };\n\n  if (items == \"no item\") {\n    getFireData();\n  }\n\n  const classes = mylessonlist();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.list,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.list,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        color: \"white\",\n        bgcolor: \"#4A8\",\n        fontWeight: \"bold\",\n        p: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h8\",\n          children: \"\\u8CFC\\u5165\\u3057\\u305F\\u30EC\\u30C3\\u30B9\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), items]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\nMyBuyLessonList = connect(state => state)(MyBuyLessonList);\nexport default MyBuyLessonList;","map":{"version":3,"sources":["C:/Users/t.osato/Documents/subero/suberobeta_app-1/components/mypage/MyBuyLessonList.js"],"names":["React","useState","firebase","MyLesson","connect","Lib","Link","makeStyles","Box","Typography","List","Button","Icon","mylessonlist","list","margin","addbtn","textAlign","btn","backgroundColor","color","MyBuyLessonList","props","items","setItems","getFireData","db","firestore","lessondata","lessonid","lessonitems","email","encodeEmail","collection","where","get","then","querySnapshot","forEach","doc","unshift","data","id","i","name","lessonname","place","lessonplace","time","lessontime","text","lessontext","price","lessonprice","push","classes","state"],"mappings":"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","sourcesContent":["//基本的には<LessonList/>と同じなのでそちらを参照\r\n//.whereでレッスン購入者とReduxのemailが一致するデータを参照\r\n\r\nimport React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport MyLesson from \"../\";\r\nimport { connect } from \"react-redux\";\r\nimport Lib from \"../../Lib/address_lib\";\r\nimport Link from \"next/link\";\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\nconst mylessonlist = makeStyles({\r\n    list:{\r\n        margin: '20px',\r\n    },\r\n    addbtn: {\r\n        textAlign: 'center',\r\n    },\r\n    btn: {\r\n        backgroundColor: \"#4A8\",\r\n        color:\"white\",\r\n    },\r\n    }\r\n);\r\n\r\n\r\nfunction MyBuyLessonList (props){\r\n  const [items,setItems] = useState(\"no item\");\r\n\r\n  const getFireData= async()=>{\r\n    const db = firebase.firestore ();\r\n    const lessondata = [];\r\n    const lessonid = [];\r\n    const lessonitems=[];\r\n    const email = Lib.encodeEmail(props.email);\r\n    await db.collection(\"lessons\").where(\"buyerid\",\"==\",email).get()\r\n    .then(function(querySnapshot){\r\n      querySnapshot.forEach(function(doc){\r\n          lessondata.unshift(doc.data());\r\n          lessonid.unshift(doc.id);\r\n      });\r\n      for (let i in lessonid){\r\n        let id = lessonid[i];\r\n        let name =lessondata[i].lessonname;\r\n        let place = lessondata[i].lessonplace;\r\n        let time = lessondata[i].lessontime;\r\n        let text = lessondata[i].lessontext;\r\n        let price = lessondata[i].lessonprice;\r\n        lessonitems.push(\r\n          <MyLesson lessonid={id}\r\n                  name={name}\r\n                  place={place}\r\n                  time={time}\r\n                  text={text}\r\n                  price={price}\r\n          />\r\n        );\r\n      }\r\n      setItems(lessonitems);\r\n    });\r\n  }\r\n\r\n  if(items ==\"no item\"){\r\n    getFireData();\r\n  }\r\n\r\nconst classes  = mylessonlist();\r\n\r\n  return(\r\n        <div className={classes.list}>\r\n            <div className={classes.list}>\r\n            <Box color=\"white\" bgcolor=\"#4A8\" fontWeight=\"bold\" p={1}>\r\n            <Typography variant=\"h8\">購入したレッスン</Typography>\r\n            </Box>\r\n            </div>\r\n              {items}\r\n        </div>\r\n  );\r\n}\r\n\r\nMyBuyLessonList = connect((state)=>state)(MyBuyLessonList);\r\nexport default MyBuyLessonList\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}