{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport firebase from \"firebase\";\nimport \"firebase/storage\"; //Firebaseの初期化\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDT8vE8-4oyfaupBRZCr_2grNoiIGfMfIg\",\n  authDomain: \"subero-prototype.firebaseapp.com\",\n  projectId: \"subero-prototype\",\n  storageBucket: \"subero-prototype.appspot.com\",\n  messagingSenderId: \"720087044660\",\n  appId: \"1:720087044660:web:35bf8de9cc22e0e0d3f061\",\n  measurementId: \"G-3F0618JDJ9\"\n}; // Initialize Firebase\n\nvar fireapp;\n\ntry {\n  firebase.initializeApp(firebaseConfig);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport var fireappp = fireapp; // ステートの初期値\n\nvar initial = {\n  login: false,\n  username: \"(click here!)\",\n  email: \"\",\n  imageurl: \"\"\n};\nexport function fireReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPDATE_USER\":\n      return action.value;\n\n    default:\n      return state;\n  }\n} //   //initStore関数\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}\nexport var storage = firebase.storage();\nexport default firebase;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","fireapp","initializeApp","error","console","log","message","fireappp","initial","login","username","email","imageurl","fireReducer","state","action","type","value","initStore","storage"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,kBAAP,C,CAEA;;AACA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,kCAFK;AAGjBC,EAAAA,SAAS,EAAE,kBAHM;AAIjBC,EAAAA,aAAa,EAAE,8BAJE;AAKjBC,EAAAA,iBAAiB,EAAE,cALF;AAMjBC,EAAAA,KAAK,EAAE,2CANU;AAOjBC,EAAAA,aAAa,EAAE;AAPE,CAArB,C,CASE;;AACF,IAAIC,OAAJ;;AACA,IAAI;AACFT,EAAAA,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AACD,CAFD,CAEE,OAAOU,KAAP,EAAc;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;;AACD,OAAO,IAAMC,QAAQ,GAAGN,OAAjB,C,CAGP;;AACA,IAAMO,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAC,KADQ;AAEdC,EAAAA,QAAQ,EAAC,eAFK;AAGdC,EAAAA,KAAK,EAAC,EAHQ;AAIdC,EAAAA,QAAQ,EAAC;AAJK,CAAhB;AAOA,OAAO,SAASC,WAAT,GAA+C;AAAA,MAAzBC,KAAyB,uEAAjBN,OAAiB;AAAA,MAARO,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,aAAL;AACE,aAAOD,MAAM,CAACE,KAAd;;AACF;AACE,aAAOH,KAAP;AAJH;AAMD,C,CAEH;;AACE,OAAO,SAASI,SAAT,GAAoC;AAAA,MAAjBJ,KAAiB,uEAATN,OAAS;AACzC,SAAOnB,WAAW,CAACwB,WAAD,EAAcC,KAAd,EACfxB,eAAe,CAACC,eAAD,CADA,CAAlB;AAED;AAGD,OAAO,IAAM4B,OAAO,GAAG3B,QAAQ,CAAC2B,OAAT,EAAhB;AACP,eAAe3B,QAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\n//Firebaseの初期化\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDT8vE8-4oyfaupBRZCr_2grNoiIGfMfIg\",\r\n    authDomain: \"subero-prototype.firebaseapp.com\",\r\n    projectId: \"subero-prototype\",\r\n    storageBucket: \"subero-prototype.appspot.com\",\r\n    messagingSenderId: \"720087044660\",\r\n    appId: \"1:720087044660:web:35bf8de9cc22e0e0d3f061\",\r\n    measurementId: \"G-3F0618JDJ9\"\r\n  };\r\n  // Initialize Firebase\r\nvar fireapp;\r\ntry {\r\n  firebase.initializeApp(firebaseConfig);\r\n} catch (error) {\r\n  console.log(error.message);\r\n}\r\nexport const fireappp = fireapp;\r\n\r\n\r\n// ステートの初期値\r\nconst initial = {\r\n  login:false,\r\n  username:\"(click here!)\",\r\n  email:\"\",\r\n  imageurl:\"\",\r\n}\r\n\r\nexport function fireReducer (state = initial, action) {\r\n    switch (action.type) {\r\n     case \"UPDATE_USER\":\r\n       return action.value;\r\n     default:\r\n       return state;\r\n   }\r\n  }\r\n\r\n//   //initStore関数\r\n  export function initStore(state = initial) {\r\n    return createStore(fireReducer, state,\r\n       applyMiddleware(thunkMiddleware))\r\n  }\r\n  \r\n\r\n  export const storage = firebase.storage();\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}