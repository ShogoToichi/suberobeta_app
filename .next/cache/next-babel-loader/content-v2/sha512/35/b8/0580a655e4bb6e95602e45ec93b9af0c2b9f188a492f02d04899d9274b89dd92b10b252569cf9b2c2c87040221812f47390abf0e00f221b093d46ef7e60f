{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\GetImage.js\";\n//ProfileAddでimport\n//inputに入れられたファイルをfirebase storageに突っ込む\n//取得した画像のurlを取得してcloudfirestoreに入れて引っぱり出せるようにする\nimport firebase, { storage } from \"../store\";\nimport \"firebase/storage\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Lib from \"../static/address_lib\";\n\nfunction GetImage(props) {\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  const {\n    0: imageUrl,\n    1: setImageUrl\n  } = useState(\"\");\n\n  const handleImage = event => {\n    const image = event.target.files[0];\n    setImage(image);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (image === \"\") {\n      console.log(\"ファイルが選択されていません\");\n    } // アップロード処理\n\n\n    const uploadTask = storage.ref(`/profileimages/${image.name}`).put(image);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, next, error, complete);\n  };\n\n  const next = snapshot => {\n    // 進行中のsnapshotを得る\n    // アップロードの進行度を表示\n    const percent = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n    console.log(percent + \"% done\");\n    console.log(snapshot);\n  };\n\n  const error = error => {\n    // エラーハンドリング\n    console.log(error);\n  };\n\n  const complete = () => {\n    // 完了後の処理\n    // 画像表示のため、アップロードした画像のURLを取得\n    storage.ref(\"profileimages\").child(image.name).getDownloadURL().then(fireBaseUrl => {\n      setImageUrl(fireBaseUrl); // 取得した画像の名前をfirebaseに保存\n\n      const db = firebase.firestore();\n      const email = Lib.encodeEmail(props.email);\n      db.collection(\"users\").doc(email).set(profile.imageurl = imageUrl, {\n        merge: true\n      }).then(function () {\n        console.log(email);\n        console.log(imageUrl);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\nGetImage = connect(state => state)(GetImage);\nexport default GetImage;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/GetImage.js"],"names":["firebase","storage","React","useState","connect","Lib","GetImage","props","image","setImage","imageUrl","setImageUrl","handleImage","event","target","files","onSubmit","preventDefault","console","log","uploadTask","ref","name","put","on","TaskEvent","STATE_CHANGED","next","error","complete","snapshot","percent","bytesTransferred","totalBytes","child","getDownloadURL","then","fireBaseUrl","db","firestore","email","encodeEmail","collection","doc","set","profile","imageurl","merge","state"],"mappings":"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","sourcesContent":["//ProfileAddでimport\r\n//inputに入れられたファイルをfirebase storageに突っ込む\r\n//取得した画像のurlを取得してcloudfirestoreに入れて引っぱり出せるようにする\r\n\r\nimport firebase,{storage} from \"../store\";\r\nimport \"firebase/storage\";\r\nimport React,{useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Lib from \"../static/address_lib\";\r\n\r\nfunction GetImage(props) {\r\n  const [image, setImage] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const handleImage = event => {\r\n    const image = event.target.files[0];\r\n    setImage(image);\r\n  };\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (image === \"\") {\r\n      console.log(\"ファイルが選択されていません\");\r\n    }\r\n    // アップロード処理\r\n    const uploadTask = storage.ref(`/profileimages/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      firebase.storage.TaskEvent.STATE_CHANGED,\r\n      next,\r\n      error,\r\n      complete\r\n    );\r\n  };\r\n  const next = snapshot => {\r\n    // 進行中のsnapshotを得る\r\n    // アップロードの進行度を表示\r\n    const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n    console.log(percent + \"% done\");\r\n    console.log(snapshot);\r\n  };\r\n  const error = error => {\r\n    // エラーハンドリング\r\n    console.log(error);\r\n  };\r\n  const complete = () => {\r\n    // 完了後の処理\r\n    // 画像表示のため、アップロードした画像のURLを取得\r\n    storage\r\n      .ref(\"profileimages\")\r\n      .child(image.name)\r\n      .getDownloadURL()\r\n      .then(fireBaseUrl => {\r\n        setImageUrl(fireBaseUrl);\r\n        // 取得した画像の名前をfirebaseに保存\r\n        const db = firebase.firestore ();\r\n        const email = Lib.encodeEmail(props.email)\r\n        db.collection(\"users\").doc(email).set(\r\n          profile.imageurl=imageUrl\r\n        ,{merge : true}).then(function(){\r\n          console.log(email);\r\n          console.log(imageUrl);\r\n      });\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"file\" onChange={handleImage} />\r\n        <button>Upload</button>\r\n      </form>\r\n      <img src={imageUrl} alt=\"uploaded\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nGetImage = connect((state)=>state)(GetImage);\r\nexport default GetImage;"]},"metadata":{},"sourceType":"module"}