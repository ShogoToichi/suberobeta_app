{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Lib from \"../../Lib/address_lib\";\nimport { connect } from \"react-redux\";\nimport \"firebase/storage\";\n\nfunction Message(props) {\n  //ステート定義\n  const {\n    0: createrid,\n    1: setCreaterid\n  } = useState(\"\");\n  const {\n    0: messages,\n    1: setMessages\n  } = useState(\"\");\n  const {\n    0: buyerid,\n    1: setBuyerid\n  } = useState(\"\");\n  const {\n    0: lessonname,\n    1: setLessonname\n  } = useState(\"\");\n  const {\n    0: creatername,\n    1: setCreaterName\n  } = useState(\"\");\n  const {\n    0: buyername,\n    1: setBuyerName\n  } = useState(\"\"); //送信者によってスタイルを変更するテスト用のスタイル\n\n  const style = {\n    // border:\"solid 1px #DDD\", \n    backgroundColor: \"#E0E0E0\",\n    borderRadius: \"7px\",\n    height: \"40px\",\n    verticalAlign: \"middle\",\n    padding: \"10px 20px 0px 20px\",\n    fontSize: \"20px\",\n    display: \"inline-block\",\n    marginBottom: \"10px\",\n    marginLeft: \"50px\"\n  };\n  const messagedata = [];\n  const messageitems = [];\n  const router = useRouter();\n  const email = Lib.encodeEmail(props.email);\n  const db = firebase.firestore(); //lessondata及びmessageを取得\n\n  const getMessageData = async () => {\n    //router.query.lessonidでページのurlの末尾を取得\n    //先にレッスン名と作成者、購入者のidを取得\n    await db.collection(\"lessons\").doc(router.query.lessonid).get() //取得したデータをlessondataにしまってから、それをステートに突っ込む\n    .then(function (doc) {\n      const lessondata = doc.data();\n      setCreaterid(lessondata.createrid);\n      setLessonname(lessondata.lessonname);\n      setBuyerid(lessondata.buyerid);\n    });\n    await db.collection(\"users\").doc(createrid).get().then(function (doc) {\n      const createrdata = doc.data();\n      setCreaterName(createrdata.profile.name);\n    }); //メッセージ情報取得処理\n    //orderBy(time)で時間の古い順に並べる\n\n    await db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").orderBy(\"time\").get() //取得したデータをmessagedata配列に入れる。\n    //配列の繰り返し処理でメッセージのjsxを作り、\n    //messageitemsに入れて、最後にstateに入れる\n    .then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        messagedata.push(doc.data());\n      });\n\n      for (let i in messagedata) {\n        let text = messagedata[i].text;\n        let userid = messagedata[i].userid; //送信者とReduxメアドの比較でスタイル分岐\n\n        if (userid == email) {\n          messageitems.push( /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                marginBottom: \"3px\"\n              },\n              children: creatername\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: style,\n              children: text\n            }), /*#__PURE__*/_jsx(\"br\", {})]\n          }));\n        } else {\n          messageitems.push( /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: style,\n              children: text\n            }), /*#__PURE__*/_jsx(\"br\", {})]\n          }));\n        }\n      } //作成者、購入者以外メッセージが見れないようにする\n\n\n      if (email == createrid || email == buyerid) {\n        setMessages(messageitems);\n      } else {\n        const errorMessage = /*#__PURE__*/_jsx(\"p\", {\n          children: \"\\u3054\\u5229\\u7528\\u3044\\u305F\\u3060\\u3051\\u307E\\u305B\\u3093\"\n        });\n\n        setMessages(errorMessage);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"button\", {\n      onClick: getMessageData,\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\"\n    }), /*#__PURE__*/_jsx(\"h2\", {\n      children: lessonname\n    }), messages]\n  });\n}\n\nMessage = connect(state => state)(Message);\nexport default Message;","map":null,"metadata":{},"sourceType":"module"}