{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/programing_practice/suberobeta_app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\Account.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\n\nvar Account = /*#__PURE__*/function (_Component) {\n  _inherits(Account, _Component);\n\n  var _super = _createSuper(Account);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _super.call(this, props); // 属性値として使うためにバインド\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _this.login_check = _this.login_check.bind(_assertThisInitialized(_this));\n    return _this;\n  } //ログイン処理\n\n\n  _createClass(Account, [{\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      firebase.auth().setPersistence(firebase);\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var self = this;\n      firebase.auth().signInWithPopup(provider) //ログイン処理完了後resultで値を受け取りReduxへ\n      .then(function (result) {\n        _this2.props.dispatch({\n          type: \"UPDATE_USER\",\n          value: {\n            login: true,\n            username: result.user.displayName,\n            email: result.user.email,\n            item: _this2.props.items\n          }\n        }); //ログイン時の処理をpropsで受け取れるようにする\n        //とりま使ってない\n        // this.props.onLogined();\n\n      });\n    } //ログアウト機能\n\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      console.log(\"logout\");\n      firebase.auth().signOut();\n      this.props.dispatch({\n        type: \"UPDATE_USER\",\n        value: {\n          login: false,\n          username: \"(click here!)\",\n          email: \"\",\n          data: [],\n          items: []\n        }\n      }); // this.props.onLogouted();\n    } //ログイン、ログアウト処理をクリック時に分岐する関数\n\n  }, {\n    key: \"login_check\",\n    value: function login_check() {\n      if (this.props.login === false) {\n        this.login();\n      } else {\n        this.logout();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"account\",\n          onClick: this.login_check,\n          children: [\"LOGINED: \", this.props.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Account;\n}(Component);\n\nAccount = connect(function (state) {\n  return state;\n})(Account);\nexport default Account;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/Account.js"],"names":["React","Component","connect","firebase","Account","props","fontSize","padding","login_check","bind","auth","setPersistence","provider","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","login","username","user","displayName","email","item","items","console","log","signOut","data","logout","state"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAEMC,O;;;;;AAMJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN,EADgB,CAEhB;;AAFgB,4DALV;AACNC,MAAAA,QAAQ,EAAC,MADH;AAENC,MAAAA,OAAO,EAAC;AAFF,KAKU;;AAGhB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAHgB;AAIjB,G,CAED;;;;;4BACO;AAAA;;AACLN,MAAAA,QAAQ,CAACO,IAAT,GAAgBC,cAAhB,CAA+BR,QAA/B;AACA,UAAIS,QAAQ,GAAG,IAAIT,QAAQ,CAACO,IAAT,CAAcG,kBAAlB,EAAf;AACA,UAAIC,IAAI,GAAG,IAAX;AACAX,MAAAA,QAAQ,CAACO,IAAT,GAAgBK,eAAhB,CAAgCH,QAAhC,EACA;AADA,OAEGI,IAFH,CAEQ,UAACC,MAAD,EAAU;AACd,QAAA,MAAI,CAACZ,KAAL,CAAWa,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAC,aADa;AAElBC,UAAAA,KAAK,EAAC;AACJC,YAAAA,KAAK,EAAC,IADF;AAEJC,YAAAA,QAAQ,EAAEL,MAAM,CAACM,IAAP,CAAYC,WAFlB;AAGJC,YAAAA,KAAK,EAAER,MAAM,CAACM,IAAP,CAAYE,KAHf;AAIJC,YAAAA,IAAI,EAAC,MAAI,CAACrB,KAAL,CAAWsB;AAJZ;AAFY,SAApB,EADc,CAUd;AACA;AACA;;AACD,OAfH;AAgBD,K,CAED;;;;6BACQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA1B,MAAAA,QAAQ,CAACO,IAAT,GAAgBoB,OAAhB;AACA,WAAKzB,KAAL,CAAWa,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAC,aADa;AAElBC,QAAAA,KAAK,EAAC;AACJC,UAAAA,KAAK,EAAC,KADF;AAEJC,UAAAA,QAAQ,EAAC,eAFL;AAGJG,UAAAA,KAAK,EAAC,EAHF;AAIJM,UAAAA,IAAI,EAAC,EAJD;AAKJJ,UAAAA,KAAK,EAAC;AALF;AAFY,OAApB,EAHM,CAaN;AACD,K,CAED;;;;kCACa;AACX,UAAI,KAAKtB,KAAL,CAAWgB,KAAX,KAAoB,KAAxB,EAA8B;AAC5B,aAAKA,KAAL;AACD,OAFD,MAEM;AACJ,aAAKW,MAAL;AACD;AACF;;;6BAEO;AACN,0BACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,+BACA;AAAM,UAAA,SAAS,EAAC,SAAhB;AACE,UAAA,OAAO,EAAE,KAAKxB,WADhB;AAAA,kCAEY,KAAKH,KAAL,CAAWiB,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;;;;EAtEmBrB,S;;AAyEtBG,OAAO,GAAGF,OAAO,CAAC,UAAC+B,KAAD;AAAA,SAAUA,KAAV;AAAA,CAAD,CAAP,CAAyB7B,OAAzB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\n\r\nclass Account extends Component {\r\n  style = {\r\n    fontSize:\"12pt\",\r\n    padding:\"5px 10px\"\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    // 属性値として使うためにバインド\r\n    this.login_check = this.login_check.bind(this);\r\n  }\r\n\r\n  //ログイン処理\r\n  login(){\r\n    firebase.auth().setPersistence(firebase)\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    var self = this;\r\n    firebase.auth().signInWithPopup(provider)\r\n    //ログイン処理完了後resultで値を受け取りReduxへ\r\n      .then((result)=>{\r\n        this.props.dispatch({\r\n          type:\"UPDATE_USER\",\r\n          value:{\r\n            login:true,\r\n            username: result.user.displayName,\r\n            email: result.user.email,\r\n            item:this.props.items\r\n          }\r\n        });\r\n        //ログイン時の処理をpropsで受け取れるようにする\r\n        //とりま使ってない\r\n        // this.props.onLogined();\r\n      });\r\n  }\r\n\r\n  //ログアウト機能\r\n  logout(){\r\n    console.log(\"logout\");\r\n    firebase.auth().signOut();\r\n    this.props.dispatch({\r\n      type:\"UPDATE_USER\",\r\n      value:{\r\n        login:false,\r\n        username:\"(click here!)\",\r\n        email:\"\",\r\n        data:[],\r\n        items:[]\r\n      }\r\n    });\r\n    // this.props.onLogouted();\r\n  }\r\n\r\n  //ログイン、ログアウト処理をクリック時に分岐する関数\r\n  login_check(){\r\n    if (this.props.login ===false){\r\n      this.login();\r\n    }else {\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <p className=\"login\">\r\n      <span className=\"account\"\r\n        onClick={this.login_check}>\r\n        LOGINED: {this.props.username}\r\n      </span>\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nAccount = connect((state)=> state)(Account);\r\nexport default Account;"]},"metadata":{},"sourceType":"module"}