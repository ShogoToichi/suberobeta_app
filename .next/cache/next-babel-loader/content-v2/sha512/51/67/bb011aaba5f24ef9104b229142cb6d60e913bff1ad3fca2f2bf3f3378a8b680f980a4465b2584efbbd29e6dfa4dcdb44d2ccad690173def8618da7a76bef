{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\MessageAdd.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Lib from \"../static/address_lib\";\n\nfunction MessageAdd(props) {\n  //使用するステートの設定(Hook)\n  const [message, setMessage] = useState(\"\"); //inputに入力された処理をeで受け取ってステートに入れる関数\n\n  const doChangeMessage = e => {\n    setMessage(e.target.value);\n  }; //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\n\n\n  const doSubmit = async () => {\n    const db = firebase.firestore();\n    const email = Lib.encodeEmail(props.email);\n    const router = useRouter();\n    await db.collection(\"lessons\").doc(router.query.lessonid).collection(message).add({\n      userid: email,\n      text: message,\n      time: db.FieldValue.serverTimestamp()\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30EC\\u30C3\\u30B9\\u30F3\\u540D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: doChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doSubmit,\n      children: \"\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n\nMessageAdd = connect(state => state)(MessageAdd);\nexport default MessageAdd;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/MessageAdd.js"],"names":["React","connect","firebase","useRouter","Lib","MessageAdd","props","message","setMessage","useState","doChangeMessage","e","target","value","doSubmit","db","firestore","email","encodeEmail","router","collection","doc","query","lessonid","add","userid","text","time","FieldValue","serverTimestamp","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,SAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAGxB;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBC,QAAQ,CAAC,EAAD,CAArC,CAJwB,CAMxB;;AACA,QAAMC,eAAe,GAAGC,CAAD,IAAK;AAC1BH,IAAAA,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD,CAPwB,CAWxB;AACA;AACA;;;AACA,QAAMC,QAAQ,GAAG,YAAS;AACxB,UAAMC,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAX;AACA,UAAMC,KAAK,GAAGb,GAAG,CAACc,WAAJ,CAAgBZ,KAAK,CAACW,KAAtB,CAAd;AACA,UAAME,MAAM,GAAGhB,SAAS,EAAxB;AACA,UAAMY,EAAE,CAACK,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BF,MAAM,CAACG,KAAP,CAAaC,QAA1C,EAAoDH,UAApD,CAA+Db,OAA/D,EAAwEiB,GAAxE,CAA4E;AAC9EC,MAAAA,MAAM,EAAER,KADsE;AAE9ES,MAAAA,IAAI,EAAEnB,OAFwE;AAG9EoB,MAAAA,IAAI,EAAEZ,EAAE,CAACa,UAAH,CAAcC,eAAd;AAHwE,KAA5E,CAAN;AAKD,GATD;;AAWF,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEnB;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEI,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMG;;AAEHT,UAAU,GAAEJ,OAAO,CAAE6B,KAAD,IAASA,KAAV,CAAP,CAAwBzB,UAAxB,CAAZ;AACA,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport {useRouter}from \"next/router\";\r\nimport Lib from \"../static/address_lib\";\r\n\r\nfunction MessageAdd(props){\r\n\r\n\r\n  //使用するステートの設定(Hook)\r\n  const [message,setMessage] = useState(\"\");\r\n\r\n  //inputに入力された処理をeで受け取ってステートに入れる関数\r\n  const doChangeMessage =(e)=>{\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\r\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\r\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\r\n  const doSubmit = async()=>{\r\n    const db = firebase.firestore ();\r\n    const email = Lib.encodeEmail(props.email);\r\n    const router = useRouter();\r\n    await db.collection(\"lessons\").doc(router.query.lessonid).collection(message).add({\r\n        userid: email,\r\n        text: message,\r\n        time: db.FieldValue.serverTimestamp(),\r\n      })\r\n  }\r\n\r\nreturn(\r\n  <div>\r\n    <p>レッスン名</p>\r\n    <input type=\"text\" onChange={doChangeMessage}></input>\r\n    <button onClick={doSubmit}>追加</button>\r\n  </div>\r\n);}\r\n\r\nMessageAdd =connect((state)=>state)(MessageAdd);\r\nexport default MessageAdd;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}