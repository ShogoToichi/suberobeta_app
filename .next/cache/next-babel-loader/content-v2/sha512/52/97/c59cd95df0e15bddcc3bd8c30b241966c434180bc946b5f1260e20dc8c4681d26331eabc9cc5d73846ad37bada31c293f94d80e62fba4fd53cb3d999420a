{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/t.osato/Documents/subero/suberobeta_app-1/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/t.osato/Documents/subero/suberobeta_app-1/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\t.osato\\\\Documents\\\\subero\\\\suberobeta_app-1\\\\components\\\\mypage\\\\MyProfile.js\",\n    _s = $RefreshSig$();\n\n//要追加 : 画像アップロード\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\nimport { connect } from \"react-redux\";\nimport Lib from \"../../Lib/address_lib\";\nimport Link from \"next/link\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MyProFileDetail from \"./parts/MyProFileDetail\";\nvar myprofile = makeStyles({\n  card: {\n    marginTop: '20px'\n  },\n  button: {\n    backgroundColor: '#E7E7E7',\n    color: 'balck'\n  },\n  title: {\n    paddingBottom: \"16px\",\n    borderBottom: \"solid 4px #DDD\"\n  }\n});\n\nfunction MyProfile(props) {\n  _s();\n\n  //ステートの設定\n  var _useState = useState(\"no data\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(\"no data\"),\n      introduction = _useState2[0],\n      setIntroduction = _useState2[1];\n\n  var _useState3 = useState(null),\n      imageurl = _useState3[0],\n      setImageurl = _useState3[1];\n\n  var getFireData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, email;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              db = firebase.firestore(); //emailにReduxからユーザーのemailを取得\n\n              email = Lib.encodeEmail(props.email); //emailでfirebaseを参照\n\n              _context.next = 4;\n              return db.collection(\"users\").doc(email).get().then(function (doc) {\n                //取得したデータを定数に入れてから、ステートに入れる\n                var profiledata = doc.data();\n                setName(profiledata.profile.name);\n                setIntroduction(profiledata.profile.introduction);\n                setImageurl(profiledata.imageurl);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFireData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (name == \"no data\") {\n    getFireData();\n  }\n\n  var classes = myprofile();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MyProFileDetail, {\n      imageurl: imageurl,\n      name: name,\n      introduction: introduction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n}\n\n_s(MyProfile, \"BDAlfeQTnfJjvNb5iosETph5vKo=\");\n\n_c = MyProfile;\nMyProfile = connect(function (state) {\n  return state;\n})(MyProfile);\nexport default MyProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"sources":["C:/Users/t.osato/Documents/subero/suberobeta_app-1/components/mypage/MyProfile.js"],"names":["React","useState","firebase","connect","Lib","Link","Typography","Button","makeStyles","MyProFileDetail","myprofile","card","marginTop","button","backgroundColor","color","title","paddingBottom","borderBottom","MyProfile","props","name","setName","introduction","setIntroduction","imageurl","setImageurl","getFireData","db","firestore","email","encodeEmail","collection","doc","get","then","profiledata","data","profile","classes","state"],"mappings":";;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAGA,IAAMC,SAAS,GAAGF,UAAU,CAAC;AACrBG,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT,GADe;AAIrBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAJa;AAQrBC,EAAAA,KAAK,EAAC;AACFC,IAAAA,aAAa,EAAC,MADZ;AAEFC,IAAAA,YAAY,EAAC;AAFX;AARe,CAAD,CAA5B;;AAgBI,SAASC,SAAT,CAAoBC,KAApB,EAA0B;AAAA;;AACtB;AADsB,kBAEHnB,QAAQ,CAAC,SAAD,CAFL;AAAA,MAEnBoB,IAFmB;AAAA,MAEdC,OAFc;;AAAA,mBAGarB,QAAQ,CAAC,SAAD,CAHrB;AAAA,MAGnBsB,YAHmB;AAAA,MAGNC,eAHM;;AAAA,mBAIKvB,QAAQ,CAAC,IAAD,CAJb;AAAA,MAInBwB,QAJmB;AAAA,MAIVC,WAJU;;AAM1B,MAAMC,WAAW;AAAA,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,EADS,GACJ1B,QAAQ,CAAC2B,SAAT,EADI,EAEf;;AACMC,cAAAA,KAHS,GAGD1B,GAAG,CAAC2B,WAAJ,CAAgBX,KAAK,CAACU,KAAtB,CAHC,EAIf;;AAJe;AAAA,qBAKTF,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,KAA3B,EAAkCI,GAAlC,GACLC,IADK,CACA,UAASF,GAAT,EAAa;AACnB;AACA,oBAAMG,WAAW,GAAGH,GAAG,CAACI,IAAJ,EAApB;AACAf,gBAAAA,OAAO,CAACc,WAAW,CAACE,OAAZ,CAAoBjB,IAArB,CAAP;AACAG,gBAAAA,eAAe,CAACY,WAAW,CAACE,OAAZ,CAAoBf,YAArB,CAAf;AACAG,gBAAAA,WAAW,CAACU,WAAW,CAACX,QAAb,CAAX;AACC,eAPK,CALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA,oBAAXE,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAeA,MAAGN,IAAI,IAAI,SAAX,EAAqB;AACjBM,IAAAA,WAAW;AACd;;AAED,MAAMY,OAAO,GAAG7B,SAAS,EAAzB;AACA,sBACQ;AAAA,2BACI,QAAC,eAAD;AACI,MAAA,QAAQ,EAAEe,QADd;AAEI,MAAA,IAAI,EAAEJ,IAFV;AAGI,MAAA,YAAY,EAAEE;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADR;AASH;;GAnCYJ,S;;KAAAA,S;AAqCbA,SAAS,GAAEhB,OAAO,CAAE,UAACqC,KAAD;AAAA,SAASA,KAAT;AAAA,CAAF,CAAP,CAAyBrB,SAAzB,CAAX;AACA,eAAeA,SAAf","sourcesContent":["//要追加 : 画像アップロード\r\n\r\nimport React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport { connect } from \"react-redux\";\r\nimport Lib from \"../../Lib/address_lib\";\r\nimport Link from \"next/link\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MyProFileDetail from \"./parts/MyProFileDetail\";\r\n\r\n\r\nconst myprofile = makeStyles({\r\n        card: {\r\n            marginTop: '20px',\r\n        },\r\n        button: {\r\n            backgroundColor: '#E7E7E7',\r\n            color: 'balck',\r\n        },\r\n        title:{\r\n            paddingBottom:\"16px\",\r\n            borderBottom:\"solid 4px #DDD\",\r\n        }\r\n    });\r\n\r\n\r\n\r\n    function MyProfile (props){\r\n        //ステートの設定\r\n    const [name,setName] = useState(\"no data\");\r\n    const [introduction,setIntroduction] = useState(\"no data\");\r\n    const [imageurl,setImageurl] = useState(null);\r\n\r\n    const getFireData= async()=>{\r\n        const db = firebase.firestore ();\r\n        //emailにReduxからユーザーのemailを取得\r\n        const email = Lib.encodeEmail(props.email);\r\n        //emailでfirebaseを参照\r\n        await db.collection(\"users\").doc(email).get()\r\n        .then(function(doc){\r\n        //取得したデータを定数に入れてから、ステートに入れる\r\n        const profiledata = doc.data();\r\n        setName(profiledata.profile.name);\r\n        setIntroduction(profiledata.profile.introduction);\r\n        setImageurl(profiledata.imageurl)\r\n        });\r\n    }\r\n    \r\n    if(name == \"no data\"){\r\n        getFireData();\r\n    }\r\n\r\n    const classes = myprofile();\r\n    return(\r\n            <div>\r\n                <MyProFileDetail \r\n                    imageurl={imageurl} \r\n                    name={name} \r\n                    introduction={introduction}\r\n                />\r\n            </div>\r\n        )\r\n}\r\n\r\nMyProfile= connect ((state)=>state)(MyProfile);\r\nexport default MyProfile;\r\n\r\n"]},"metadata":{},"sourceType":"module"}