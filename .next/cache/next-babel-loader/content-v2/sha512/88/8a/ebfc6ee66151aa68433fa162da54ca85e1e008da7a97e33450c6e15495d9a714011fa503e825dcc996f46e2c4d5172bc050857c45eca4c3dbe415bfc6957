{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\t.osato\\\\Documents\\\\subero\\\\suberobeta_app-1\\\\components\\\\mypage\\\\MyProfile.js\";\n//要追加 : 画像アップロード\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\nimport { connect } from \"react-redux\";\nimport Lib from \"../../Lib/address_lib\";\nimport MyProFileDetail from \"./parts/MyProFileDetail\";\n\nfunction MyProfile(props) {\n  //ステートの設定\n  const {\n    0: name,\n    1: setName\n  } = useState(\"no data\");\n  const {\n    0: introduction,\n    1: setIntroduction\n  } = useState(\"no data\");\n  const {\n    0: imageurl,\n    1: setImageurl\n  } = useState(null);\n\n  const getFireData = async () => {\n    const db = firebase.firestore(); //emailにReduxからユーザーのemailを取得\n\n    const email = Lib.encodeEmail(props.email); //emailでfirebaseを参照\n\n    await db.collection(\"users\").doc(email).get().then(function (doc) {\n      //取得したデータを定数に入れてから、ステートに入れる\n      const profiledata = doc.data();\n      setName(profiledata.profile.name);\n      setIntroduction(profiledata.profile.introduction);\n      setImageurl(profiledata.imageurl);\n    });\n  };\n\n  if (name == \"no data\") {\n    getFireData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MyProFileDetail, {\n      imageurl: imageurl,\n      name: name,\n      introduction: introduction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n}\n\nMyProfile = connect(state => state)(MyProfile);\nexport default MyProfile;","map":{"version":3,"sources":["C:/Users/t.osato/Documents/subero/suberobeta_app-1/components/mypage/MyProfile.js"],"names":["React","useState","firebase","connect","Lib","MyProFileDetail","MyProfile","props","name","setName","introduction","setIntroduction","imageurl","setImageurl","getFireData","db","firestore","email","encodeEmail","collection","doc","get","then","profiledata","data","profile","state"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEI,SAASC,SAAT,CAAoBC,KAApB,EAA0B;AACtB;AACJ,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBR,QAAQ,CAAC,SAAD,CAA/B;AACA,QAAM;AAAA,OAACS,YAAD;AAAA,OAAcC;AAAd,MAAiCV,QAAQ,CAAC,SAAD,CAA/C;AACA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAUC;AAAV,MAAyBZ,QAAQ,CAAC,IAAD,CAAvC;;AAEA,QAAMa,WAAW,GAAE,YAAS;AACxB,UAAMC,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAX,CADwB,CAExB;;AACA,UAAMC,KAAK,GAAGb,GAAG,CAACc,WAAJ,CAAgBX,KAAK,CAACU,KAAtB,CAAd,CAHwB,CAIxB;;AACA,UAAMF,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,KAA3B,EAAkCI,GAAlC,GACLC,IADK,CACA,UAASF,GAAT,EAAa;AACnB;AACA,YAAMG,WAAW,GAAGH,GAAG,CAACI,IAAJ,EAApB;AACAf,MAAAA,OAAO,CAACc,WAAW,CAACE,OAAZ,CAAoBjB,IAArB,CAAP;AACAG,MAAAA,eAAe,CAACY,WAAW,CAACE,OAAZ,CAAoBf,YAArB,CAAf;AACAG,MAAAA,WAAW,CAACU,WAAW,CAACX,QAAb,CAAX;AACC,KAPK,CAAN;AAQH,GAbD;;AAeA,MAAGJ,IAAI,IAAI,SAAX,EAAqB;AACjBM,IAAAA,WAAW;AACd;;AAED,sBACQ;AAAA,2BACI,QAAC,eAAD;AACI,MAAA,QAAQ,EAAEF,QADd;AAEI,MAAA,IAAI,EAAEJ,IAFV;AAGI,MAAA,YAAY,EAAEE;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADR;AASH;;AAEDJ,SAAS,GAAEH,OAAO,CAAGuB,KAAD,IAASA,KAAX,CAAP,CAAyBpB,SAAzB,CAAX;AACA,eAAeA,SAAf","sourcesContent":["//要追加 : 画像アップロード\r\n\r\nimport React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport { connect } from \"react-redux\";\r\nimport Lib from \"../../Lib/address_lib\";\r\nimport MyProFileDetail from \"./parts/MyProFileDetail\";\r\n\r\n    function MyProfile (props){\r\n        //ステートの設定\r\n    const [name,setName] = useState(\"no data\");\r\n    const [introduction,setIntroduction] = useState(\"no data\");\r\n    const [imageurl,setImageurl] = useState(null);\r\n\r\n    const getFireData= async()=>{\r\n        const db = firebase.firestore ();\r\n        //emailにReduxからユーザーのemailを取得\r\n        const email = Lib.encodeEmail(props.email);\r\n        //emailでfirebaseを参照\r\n        await db.collection(\"users\").doc(email).get()\r\n        .then(function(doc){\r\n        //取得したデータを定数に入れてから、ステートに入れる\r\n        const profiledata = doc.data();\r\n        setName(profiledata.profile.name);\r\n        setIntroduction(profiledata.profile.introduction);\r\n        setImageurl(profiledata.imageurl)\r\n        });\r\n    }\r\n    \r\n    if(name == \"no data\"){\r\n        getFireData();\r\n    }\r\n\r\n    return(\r\n            <div>\r\n                <MyProFileDetail \r\n                    imageurl={imageurl} \r\n                    name={name} \r\n                    introduction={introduction}\r\n                />\r\n            </div>\r\n        )\r\n}\r\n\r\nMyProfile= connect ((state)=>state)(MyProfile);\r\nexport default MyProfile;\r\n\r\n"]},"metadata":{},"sourceType":"module"}