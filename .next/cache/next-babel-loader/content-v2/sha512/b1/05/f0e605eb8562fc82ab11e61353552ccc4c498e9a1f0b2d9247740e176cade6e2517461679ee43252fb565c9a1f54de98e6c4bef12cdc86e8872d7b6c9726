{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\GetImage.js\",\n    _s = $RefreshSig$();\n\n//ProfileAddでimport\n//inputに入れられたファイルをfirebase storageに突っ込む\n//取得した画像のurlを取得してclouに入れて引っぱり出せるようにする\nimport firebase, { storage } from \"../store\";\nimport \"firebase/storage\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction GetImage(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      image = _useState[0],\n      setImage = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      imageUrl = _useState2[0],\n      setImageUrl = _useState2[1];\n\n  var handleImage = function handleImage(event) {\n    var image = event.target.files[0];\n    setImage(image);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n\n    if (image === \"\") {\n      console.log(\"ファイルが選択されていません\");\n    } // アップロード処理\n\n\n    var uploadTask = storage.ref(\"/profileimages/\".concat(image.name)).put(image);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, next, error, complete);\n  };\n\n  var next = function next(snapshot) {\n    // 進行中のsnapshotを得る\n    // アップロードの進行度を表示\n    var percent = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n    console.log(percent + \"% done\");\n    console.log(snapshot);\n  };\n\n  var error = function error(_error) {\n    // エラーハンドリング\n    console.log(_error);\n  };\n\n  var complete = function complete() {\n    // 完了後の処理\n    // 画像表示のため、アップロードした画像のURLを取得\n    storage.ref(\"profileimages\").child(image.name).getDownloadURL().then(function (fireBaseUrl) {\n      setImageUrl(fireBaseUrl); // 取得した画像の名前をfirebaseに保存\n\n      var db = firebase.firestore();\n      var email = Lib.encodeEmail(props.email);\n      db.collection(\"users\").doc(email).set({\n        profile: {\n          imageurl: imageUrl\n        }\n      }, {\n        merge: true\n      }).then(function () {\n        console.log(email);\n        console.log(imageUrl);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GetImage, \"u9LA1aX7ridNT4pCTPfyBZ4Kwm0=\");\n\n_c = GetImage;\nGetImage = connect(function (state) {\n  return state;\n})(GetImage);\nexport default GetImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetImage\");","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/GetImage.js"],"names":["firebase","storage","React","useState","connect","GetImage","props","image","setImage","imageUrl","setImageUrl","handleImage","event","target","files","onSubmit","preventDefault","console","log","uploadTask","ref","name","put","on","TaskEvent","STATE_CHANGED","next","error","complete","snapshot","percent","bytesTransferred","totalBytes","child","getDownloadURL","then","fireBaseUrl","db","firestore","email","Lib","encodeEmail","collection","doc","set","profile","imageurl","merge","state"],"mappings":"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","sourcesContent":["//ProfileAddでimport\r\n//inputに入れられたファイルをfirebase storageに突っ込む\r\n//取得した画像のurlを取得してclouに入れて引っぱり出せるようにする\r\n\r\nimport firebase,{storage} from \"../store\";\r\nimport \"firebase/storage\";\r\nimport React,{useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction GetImage(props) {\r\n  const [image, setImage] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const handleImage = event => {\r\n    const image = event.target.files[0];\r\n    setImage(image);\r\n  };\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (image === \"\") {\r\n      console.log(\"ファイルが選択されていません\");\r\n    }\r\n    // アップロード処理\r\n    const uploadTask = storage.ref(`/profileimages/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      firebase.storage.TaskEvent.STATE_CHANGED,\r\n      next,\r\n      error,\r\n      complete\r\n    );\r\n  };\r\n  const next = snapshot => {\r\n    // 進行中のsnapshotを得る\r\n    // アップロードの進行度を表示\r\n    const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n    console.log(percent + \"% done\");\r\n    console.log(snapshot);\r\n  };\r\n  const error = error => {\r\n    // エラーハンドリング\r\n    console.log(error);\r\n  };\r\n  const complete = () => {\r\n    // 完了後の処理\r\n    // 画像表示のため、アップロードした画像のURLを取得\r\n    storage\r\n      .ref(\"profileimages\")\r\n      .child(image.name)\r\n      .getDownloadURL()\r\n      .then(fireBaseUrl => {\r\n        setImageUrl(fireBaseUrl);\r\n        // 取得した画像の名前をfirebaseに保存\r\n        const db = firebase.firestore ();\r\n        const email = Lib.encodeEmail(props.email)\r\n        db.collection(\"users\").doc(email).set({\r\n          profile:{imageurl:imageUrl\r\n          }\r\n        },{merge : true}).then(function(){\r\n          console.log(email);\r\n          console.log(imageUrl);\r\n      });\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"file\" onChange={handleImage} />\r\n        <button>Upload</button>\r\n      </form>\r\n      <img src={imageUrl} alt=\"uploaded\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nGetImage = connect((state)=>state)(GetImage);\r\nexport default GetImage;"]},"metadata":{},"sourceType":"module"}