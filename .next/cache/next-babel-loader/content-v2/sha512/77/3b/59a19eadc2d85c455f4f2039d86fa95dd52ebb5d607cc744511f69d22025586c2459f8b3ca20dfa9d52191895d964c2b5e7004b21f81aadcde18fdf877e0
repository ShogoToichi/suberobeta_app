{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/t.osato/Documents/subero/suberobeta_app-1/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/t.osato/Documents/subero/suberobeta_app-1/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//メッセージ送信フォーム\n//message/[lessonid]でインポート\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { useRouter } from \"next/router\";\nimport Lib from \"../../Lib/address_lib\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      margin: theme.spacing(1),\n      width: '500px'\n    },\n    btn: {\n      width: \"80px\",\n      marginLeft: \"210px\"\n    }\n  };\n});\n\nfunction MessageAdd(props) {\n  //使用するステートの設定(Hook)\n  var _useState = useState(\"\"),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      userfilter = _useState2[0],\n      setUserfilter = _useState2[1]; //inputに入力された処理をeで受け取ってステートに入れる関数\n\n\n  var doChangeMessage = function doChangeMessage(e) {\n    setMessage(e.target.value);\n  };\n\n  var router = useRouter(); //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\n\n  var doSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, email, d;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              db = firebase.firestore();\n              email = Lib.encodeEmail(props.email);\n              d = new Date().getTime();\n              _context.next = 5;\n              return db.collection(\"lessons\").doc(router.query.lessonid).collection(\"message\").add({\n                userid: email,\n                text: message,\n                time: firebase.firestore.FieldValue.serverTimestamp()\n              }).then(function () {\n                setMessage(\"\");\n              });\n\n            case 5:\n              //userfilterのTorFを、マテリアルUIの表示に関する属性に用いて、\n              //作成者、購入者以外にフォームを表示しなくする予定\n              if (email == createrid || email == buyerid) {\n                setUserfilter(false);\n              } else {\n                setUserfilter(true);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function doSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var classes = useStyles();\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsx(TextField, {\n        id: \"outlined-basic\",\n        variant: \"outlined\",\n        onChange: doChangeMessage,\n        value: message,\n        multiline: true,\n        rows: 3,\n        fullWidth: true,\n        disabled: userfilter\n      })\n    }), /*#__PURE__*/_jsx(Button, {\n      variant: \"outlined\",\n      className: classes.btn,\n      onClick: doSubmit,\n      disabled: userfilter,\n      children: \"\\u9001\\u4FE1\"\n    })]\n  });\n}\n\nMessageAdd = connect(function (state) {\n  return state;\n})(MessageAdd);\nexport default MessageAdd;","map":null,"metadata":{},"sourceType":"module"}