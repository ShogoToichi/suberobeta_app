{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\GetImage.js\",\n    _s = $RefreshSig$();\n\nimport firebase, { storage } from \"../store\";\nimport \"firebase/storage\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction GetImage() {\n  _s();\n\n  var _useState = useState(\"\"),\n      image = _useState[0],\n      setImage = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      imageUrl = _useState2[0],\n      setImageUrl = _useState2[1];\n\n  var handleImage = function handleImage(event) {\n    var image = event.target.files[0];\n    setImage(image);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n\n    if (image === \"\") {\n      console.log(\"ファイルが選択されていません\");\n    } // アップロード処理\n\n\n    var uploadTask = storage.ref(\"/profileimages/\".concat(image.name)).put(image);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, next, error, complete);\n  };\n\n  var next = function next(snapshot) {\n    // 進行中のsnapshotを得る\n    // アップロードの進行度を表示\n    var percent = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n    console.log(percent + \"% done\");\n    console.log(snapshot);\n  };\n\n  var error = function error(_error) {\n    // エラーハンドリング\n    console.log(_error);\n  };\n\n  var complete = function complete() {\n    // 完了後の処理\n    // 画像表示のため、アップロードした画像のURLを取得\n    storage.ref(\"profileimages\").child(image.name).getDownloadURL().then(function (fireBaseUrl) {\n      setImageUrl(fireBaseUrl);\n      props.dispatch({\n        type: \"UPDATE_USER\",\n        value: {\n          imageurl: fireBaseUrl\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u753B\\u50CF\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GetImage, \"u9LA1aX7ridNT4pCTPfyBZ4Kwm0=\");\n\n_c = GetImage;\nGetImage = connect(function (state) {\n  return state;\n})(GetImage);\nexport default GetImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetImage\");","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/GetImage.js"],"names":["firebase","storage","React","useState","connect","GetImage","image","setImage","imageUrl","setImageUrl","handleImage","event","target","files","onSubmit","preventDefault","console","log","uploadTask","ref","name","put","on","TaskEvent","STATE_CHANGED","next","error","complete","snapshot","percent","bytesTransferred","totalBytes","child","getDownloadURL","then","fireBaseUrl","props","dispatch","type","value","imageurl","state"],"mappings":"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","sourcesContent":["import firebase,{storage} from \"../store\";\r\nimport \"firebase/storage\";\r\nimport React,{useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction GetImage() {\r\n  const [image, setImage] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const handleImage = event => {\r\n    const image = event.target.files[0];\r\n    setImage(image);\r\n  };\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (image === \"\") {\r\n      console.log(\"ファイルが選択されていません\");\r\n    }\r\n    // アップロード処理\r\n    const uploadTask = storage.ref(`/profileimages/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      firebase.storage.TaskEvent.STATE_CHANGED,\r\n      next,\r\n      error,\r\n      complete\r\n    );\r\n  };\r\n  const next = snapshot => {\r\n    // 進行中のsnapshotを得る\r\n    // アップロードの進行度を表示\r\n    const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n    console.log(percent + \"% done\");\r\n    console.log(snapshot);\r\n  };\r\n  const error = error => {\r\n    // エラーハンドリング\r\n    console.log(error);\r\n  };\r\n  const complete = () => {\r\n    // 完了後の処理\r\n    // 画像表示のため、アップロードした画像のURLを取得\r\n    storage\r\n      .ref(\"profileimages\")\r\n      .child(image.name)\r\n      .getDownloadURL()\r\n      .then(fireBaseUrl => {\r\n        setImageUrl(fireBaseUrl);\r\n        props.dispatch({\r\n          type:\"UPDATE_USER\",\r\n          value:{\r\n            imageurl:fireBaseUrl\r\n          }\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>画像アップロード</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"file\" onChange={handleImage} />\r\n        <button>Upload</button>\r\n      </form>\r\n      <img src={imageUrl} alt=\"uploaded\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nGetImage=connect((state)=>state)(GetImage);\r\nexport default GetImage;"]},"metadata":{},"sourceType":"module"}