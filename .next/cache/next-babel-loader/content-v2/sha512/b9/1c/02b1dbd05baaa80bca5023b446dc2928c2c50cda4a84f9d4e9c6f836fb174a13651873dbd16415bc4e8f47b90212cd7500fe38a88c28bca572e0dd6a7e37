{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\t.osato\\\\Documents\\\\subero\\\\suberobeta_app-1\\\\components\\\\lessonadd\\\\LessonAdd.js\";\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\nimport { connect } from \"react-redux\";\nimport Lib from \"../../Lib/address_lib\";\nimport Title from \"../normal_parts/Title\";\nimport InputForm from \"./parts/InputForm\";\n\nfunction LessonAdd(props) {\n  //使用するステートの設定(Hook)\n  const {\n    0: lessonname,\n    1: setLessonname\n  } = useState(\"\");\n  const {\n    0: place,\n    1: setPlace\n  } = useState(\"\");\n  const {\n    0: time,\n    1: setTime\n  } = useState(\"\");\n  const {\n    0: price,\n    1: setPrice\n  } = useState(\"\");\n  const {\n    0: lessoncomment,\n    1: setLessoncomment\n  } = useState(\"\"); //inputに入力された処理をeで受け取ってステートに入れる関数\n\n  const doChangeName = e => {\n    setLessonname(e.target.value);\n  };\n\n  const doChangePlace = e => {\n    setPlace(e.target.value);\n  };\n\n  const doChangeTime = e => {\n    setTime(e.target.value);\n  };\n\n  const doChangePrice = e => {\n    setPrice(e.target.value);\n  };\n\n  const doChangeComment = e => {\n    setLessoncomment(e.target.value);\n  }; //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\n\n\n  const doSubmit = async () => {\n    const db = firebase.firestore();\n    const email = Lib.encodeEmail(props.email);\n    await db.collection(\"lessons\").add({\n      createrid: email,\n      lessonname: lessonname,\n      lessonplace: place,\n      lessonprice: price,\n      lessontext: lessoncomment,\n      lessontime: time\n    }).then(function (doc) {\n      console.log(\"LessonID:\", doc.id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: \"新規レッスンの追加\",\n      subtitle: \"自分の能力を生かして、ウィンタースポーツの輪を広げましょう。\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      doChangeName: doChangeName,\n      doChangeTime: doChangeTime,\n      doChangePlace: doChangePlace,\n      doChangePrice: doChangePrice,\n      doChangeComment: doChangeComment,\n      doSubmit: doSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\nLessonAdd = connect(state => state)(LessonAdd);\nexport default LessonAdd;","map":{"version":3,"sources":["C:/Users/t.osato/Documents/subero/suberobeta_app-1/components/lessonadd/LessonAdd.js"],"names":["React","useState","firebase","connect","Lib","Title","InputForm","LessonAdd","props","lessonname","setLessonname","place","setPlace","time","setTime","price","setPrice","lessoncomment","setLessoncomment","doChangeName","e","target","value","doChangePlace","doChangeTime","doChangePrice","doChangeComment","doSubmit","db","firestore","email","encodeEmail","collection","add","createrid","lessonplace","lessonprice","lessontext","lessontime","then","doc","console","log","id","state"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport { connect } from \"react-redux\";\r\nimport Lib from \"../../Lib/address_lib\";\r\nimport Title from \"../normal_parts/Title\"\r\nimport InputForm from \"./parts/InputForm\"\r\n\r\n\r\nfunction LessonAdd (props){\r\n\r\n  //使用するステートの設定(Hook)\r\n  const [lessonname,setLessonname] = useState(\"\");\r\n  const [place,setPlace] = useState(\"\");\r\n  const [time,setTime] = useState(\"\");\r\n  const [price,setPrice] = useState(\"\");\r\n  const [lessoncomment,setLessoncomment] = useState(\"\");\r\n\r\n  //inputに入力された処理をeで受け取ってステートに入れる関数\r\n  const doChangeName =(e)=>{\r\n    setLessonname(e.target.value);\r\n  }\r\n  const doChangePlace= (e)=>{\r\n    setPlace(e.target.value);\r\n  }\r\n  const doChangeTime = (e)=>{\r\n    setTime(e.target.value);\r\n  }\r\n  const doChangePrice = (e)=>{\r\n    setPrice(e.target.value);\r\n  }\r\n  const doChangeComment = (e)=>{\r\n    setLessoncomment(e.target.value);\r\n  }\r\n\r\n  //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\r\n  //addで追加しているから、ドキュメントidはユニークなidが自動で当てられる\r\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\r\n  const doSubmit = async()=>{\r\n    const db = firebase.firestore ();\r\n    const email = Lib.encodeEmail(props.email)\r\n    await db.collection(\"lessons\").add({\r\n        createrid: email,\r\n        lessonname:lessonname,\r\n        lessonplace:place,\r\n        lessonprice:price,\r\n        lessontext:lessoncomment,\r\n        lessontime:time\r\n      }).then(function(doc){\r\n        console.log(\"LessonID:\",doc.id);\r\n      });\r\n  }\r\n\r\n    return(\r\n        <div>\r\n            <Title \r\n              title={\"新規レッスンの追加\"} \r\n              subtitle={\"自分の能力を生かして、ウィンタースポーツの輪を広げましょう。\"}\r\n            />\r\n            <InputForm \r\n              doChangeName={doChangeName}\r\n              doChangeTime={doChangeTime}\r\n              doChangePlace={doChangePlace}\r\n              doChangePrice={doChangePrice}\r\n              doChangeComment={doChangeComment}\r\n              doSubmit={doSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nLessonAdd =connect((state)=>state)(LessonAdd);\r\nexport default LessonAdd;\r\n\r\n"]},"metadata":{},"sourceType":"module"}