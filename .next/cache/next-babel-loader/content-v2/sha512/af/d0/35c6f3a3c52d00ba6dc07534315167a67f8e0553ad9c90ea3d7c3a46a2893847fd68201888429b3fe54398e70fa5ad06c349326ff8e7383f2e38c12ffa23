{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\programing_practice\\\\suberobeta_app\\\\components\\\\profileedit\\\\ProfileEdit.js\";\n//要検討画像アップロード処理\nimport React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\nimport { connect } from \"react-redux\";\nimport Lib from \"../../static/address_lib\";\nimport Link from \"next/link\";\nimport GetImage from \"./GetImage\";\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nconst plofiledit = makeStyles({\n  title: {\n    margin: '10px',\n    fontWeight: 'bold'\n  },\n  name: {\n    marginTop: '20px'\n  },\n  upload: {\n    marginTop: '40px'\n  },\n  plofile: {\n    marginTop: '40px'\n  },\n  buttongroup: {\n    marginTop: '40px',\n    textAlign: 'center'\n  },\n  button: {\n    width: '200px',\n    backgroundColor: '#DDD',\n    color: 'black',\n    margin: \"0px 20px\"\n  }\n});\n\nfunction ProfileEdit(props) {\n  const style = {\n    width: \"50%\",\n    margin: \"0 auto\",\n    marginTop: \"150px\"\n  }; //使用するステートの設定(Hook)\n\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: introduction,\n    1: setIntroduction\n  } = useState(\"\"); //inputに入力された処理をeで受け取ってステートに入れる関数\n\n  const doChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const doChangeIntroduction = e => {\n    setIntroduction(e.target.value);\n  }; //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\n\n\n  const doSubmit = async () => {\n    const db = firebase.firestore();\n    const email = Lib.encodeEmail(props.email);\n    await db.collection(\"users\").doc(email).set({\n      profile: {\n        name: name,\n        introduction: introduction\n      }\n    }, {\n      merge: true\n    }).then(function () {\n      //いろいろ確認に利用、いらない処理\n      console.log(name, introduction);\n    });\n  }; ///////////////画像取得処理//////////////////////\n\n\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  const {\n    0: imageUrl,\n    1: setImageUrl\n  } = useState(\"\");\n\n  function GetImage() {\n    const handleImage = event => {\n      const image = event.target.files[0];\n      setImage(image);\n    };\n\n    const onSubmit = event => {\n      event.preventDefault();\n\n      if (image === \"\") {\n        console.log(\"ファイルが選択されていません\");\n      } // アップロード処理\n\n\n      const uploadTask = storage.ref(`/profileimages/${image.name}`).put(image);\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, next, error, complete);\n    };\n\n    const next = snapshot => {\n      // 進行中のsnapshotを得る\n      // アップロードの進行度を表示\n      const percent = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log(percent + \"% done\");\n      console.log(snapshot);\n    };\n\n    const error = error => {\n      // エラーハンドリング\n      console.log(error);\n    };\n\n    const complete = () => {\n      // 完了後の処理\n      // 画像表示のため、アップロードした画像のURLを取得\n      storage.ref(\"profileimages\").child(image.name).getDownloadURL().then(fireBaseUrl => {\n        setImageUrl(fireBaseUrl); // 取得した画像の名前をfirebaseに保存\n\n        const db = firebase.firestore();\n        const email = Lib.encodeEmail(props.email);\n        db.collection(\"users\").doc(email).set({\n          \"imageurl\": fireBaseUrl\n        }, {\n          merge: true\n        }).then(function () {\n          console.log(fireBaseUrl);\n          console.log(imageUrl);\n        });\n      });\n    };\n  } //////////////////////gaz  \n\n\n  const classes = plofiledit();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"\\u30DE\\u30A4\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u7DE8\\u96C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.name,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h8\",\n        children: \"\\u30E6\\u30FC\\u30B6\\u540D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-textarea\",\n        label: \"\\u30E6\\u30FC\\u30B6\\u540D\",\n        placeholder: \"\",\n        multiline: true,\n        maxWidth: true,\n        onChange: doChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upload,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h8\",\n        children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u753B\\u50CF\\u306E\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        className: classes.input,\n        id: \"icon-button-file\",\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"icon-button\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: /*#__PURE__*/_jsxDEV(GetImage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.plofile,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-textarea\",\n        label: \"\\u81EA\\u5DF1\\u7D39\\u4ECB\\u6587\",\n        placeholder: \"\",\n        rows: 8,\n        multiline: true,\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: doChangeIntroduction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttongroup,\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        disableElevation: true,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/mypage\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            onClick: doSubmit,\n            children: \"\\u5909\\u66F4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/mypage\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n\nProfileEdit = connect(state => state)(ProfileEdit);\nexport default ProfileEdit;","map":{"version":3,"sources":["C:/Users/programing_practice/suberobeta_app/components/profileedit/ProfileEdit.js"],"names":["React","useState","firebase","connect","Lib","Link","GetImage","makeStyles","Typography","TextField","Button","IconButton","PhotoCamera","ButtonGroup","plofiledit","title","margin","fontWeight","name","marginTop","upload","plofile","buttongroup","textAlign","button","width","backgroundColor","color","ProfileEdit","props","style","setName","introduction","setIntroduction","doChangeName","e","target","value","doChangeIntroduction","doSubmit","db","firestore","email","encodeEmail","collection","doc","set","profile","merge","then","console","log","image","setImage","imageUrl","setImageUrl","handleImage","event","files","onSubmit","preventDefault","uploadTask","storage","ref","put","on","TaskEvent","STATE_CHANGED","next","error","complete","snapshot","percent","bytesTransferred","totalBytes","child","getDownloadURL","fireBaseUrl","classes","input","state"],"mappings":"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","sourcesContent":["//要検討画像アップロード処理\r\n\r\nimport React,{useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport { connect } from \"react-redux\";\r\nimport Lib from \"../../static/address_lib\";\r\nimport Link from \"next/link\";\r\nimport GetImage from \"./GetImage\";\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\n\r\n\r\n\r\nconst plofiledit = makeStyles({\r\n    title: {\r\n        margin: '10px',\r\n        fontWeight: 'bold',\r\n    },\r\n    name: {\r\n        marginTop: '20px'\r\n    },\r\n    upload: {\r\n        marginTop: '40px'\r\n    },\r\n    plofile: {\r\n        marginTop: '40px',\r\n    },\r\n    buttongroup:{\r\n        marginTop: '40px',\r\n        textAlign: 'center',\r\n    },\r\n    button:{\r\n        width: '200px',\r\n        backgroundColor: '#DDD',\r\n        color: 'black',\r\n        margin:\"0px 20px\",\r\n    },\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction ProfileEdit (props){\r\n\r\n  const style = {\r\n    width: \"50%\",\r\n    margin: \"0 auto\",\r\n    marginTop: \"150px\",\r\n  };\r\n//使用するステートの設定(Hook)\r\n  const [name,setName] = useState(\"\");\r\n  const[introduction,setIntroduction] = useState(\"\");\r\n\r\n  //inputに入力された処理をeで受け取ってステートに入れる関数\r\n  const doChangeName =(e)=>{\r\n    setName(e.target.value);\r\n  }\r\n  const doChangeIntroduction =(e)=>{\r\n    setIntroduction(e.target.value);\r\n  }\r\n\r\n  //追加ボタンを押したらfirebaseにステートの情報を書き込む処理\r\n  //Reduxからユーザーのemail(id)をencode( .→* )にして定数に代入\r\n  const doSubmit = async()=>{\r\n    const db = firebase.firestore ();\r\n    const email = Lib.encodeEmail(props.email)\r\n    await db.collection(\"users\").doc(email).set({\r\n      profile:{ name:name , introduction:introduction\r\n        }\r\n    },{merge: true}).then(function(){\r\n      //いろいろ確認に利用、いらない処理\r\n        console.log(name,introduction);\r\n      });\r\n  }\r\n\r\n  \r\n  \r\n  ///////////////画像取得処理//////////////////////\r\n\r\n  const [image, setImage] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\nfunction GetImage(){\r\n  const handleImage = event => {\r\n    const image = event.target.files[0];\r\n    setImage(image);\r\n  };\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (image === \"\") {\r\n      console.log(\"ファイルが選択されていません\");\r\n    }\r\n    // アップロード処理\r\n    const uploadTask = storage.ref(`/profileimages/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      firebase.storage.TaskEvent.STATE_CHANGED,\r\n      next,\r\n      error,\r\n      complete\r\n    );\r\n  };\r\n  const next = snapshot => {\r\n    // 進行中のsnapshotを得る\r\n    // アップロードの進行度を表示\r\n    const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n    console.log(percent + \"% done\");\r\n    console.log(snapshot);\r\n  };\r\n  const error = error => {\r\n    // エラーハンドリング\r\n    console.log(error);\r\n  };\r\n  const complete = () => {\r\n    // 完了後の処理\r\n    // 画像表示のため、アップロードした画像のURLを取得\r\n    storage\r\n    .ref(\"profileimages\")\r\n    .child(image.name)\r\n    .getDownloadURL()\r\n      .then(fireBaseUrl => {\r\n        setImageUrl(fireBaseUrl);\r\n        // 取得した画像の名前をfirebaseに保存\r\n        const db = firebase.firestore ();\r\n        const email = Lib.encodeEmail(props.email)\r\n        db.collection(\"users\").doc(email).set({\r\n          \"imageurl\":fireBaseUrl,\r\n        }\r\n        ,{merge : true}).then(function(){\r\n          console.log(fireBaseUrl);\r\n          console.log(imageUrl);\r\n        });\r\n      });\r\n    };\r\n  }\r\n//////////////////////gaz  \r\n\r\n\r\n\r\n  const classes = plofiledit();\r\n  \r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n            <div className={classes.title}>\r\n                <Typography variant=\"h5\">マイプロフィール編集</Typography> \r\n            </div>\r\n\r\n            <div className={classes.name}>\r\n                    <Typography variant=\"h8\">ユーザ名</Typography>\r\n                    <TextField\r\n                            id=\"standard-textarea\"\r\n                            label=\"ユーザ名\"\r\n                            placeholder=\"\"\r\n                            multiline\r\n                            maxWidth\r\n                            onChange={doChangeName}\r\n                    />\r\n            </div>\r\n            \r\n           \r\n            <div className={classes.upload}>\r\n                    <Typography variant=\"h8\">プロフィール画像のアップロード</Typography>\r\n\r\n                    <br></br>\r\n                    \r\n                   \r\n                    <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                        <PhotoCamera />\r\n                        </IconButton>\r\n                    </label>\r\n            </div>\r\n\r\n{/* 使用予定 */}\r\n    <div className=\"App\">\r\n      <div style={style}>\r\n        <GetImage/>\r\n      </div>\r\n    </div>\r\n\r\n\r\n            <div className={classes.plofile}>\r\n                    <TextField\r\n                    id=\"standard-textarea\"\r\n                    label=\"自己紹介文\"\r\n                    placeholder=\"\"\r\n                    rows={8}\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={doChangeIntroduction}\r\n                    />\r\n            </div>\r\n\r\n            <div className={classes.buttongroup}>\r\n                    <ButtonGroup disableElevation variant=\"outlined\">\r\n                        <Link href=\"/mypage\">\r\n                    <Button className={classes.button} onClick={doSubmit}>変更</Button>\r\n                        </Link>\r\n                        <Link href=\"/mypage\">\r\n                    <Button className={classes.button}>キャンセル</Button>\r\n                        </Link>\r\n                    </ButtonGroup>\r\n            </div>\r\n        </div>\r\n \r\n);}\r\n\r\nProfileEdit =connect((state)=>state)(ProfileEdit);\r\nexport default ProfileEdit;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}